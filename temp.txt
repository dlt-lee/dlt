> #clu:
> sort(table(data.xgb.clu$a1.clu))

 7  8 15 16  5 11 14  9 10 
 1  1  1  1  2  2  2  3  3 
> sort(table(data.xgb.clu$a2.clu))

12 14 15 17 19 10 11 13 16 
 1  1  1  1  1  2  2  2  5 
> sort(table(data.xgb.clu$a3.clu))

 7 11 12 13 14 20 22 18 19 
 1  1  1  1  1  1  1  4  5 
> sort(table(data.xgb.clu$a4.clu))

18 20 25 26 27 21 22 23 24 
 1  1  1  1  1  2  3  3  3 
> sort(table(data.xgb.clu$a5.clu))

19 24 26 27 34 28 29 31 32 30 
 1  1  1  1  1  2  2  2  2  3 
> sort(table(data.xgb.clu$b1.clu))

6 3 2 5 4 
1 2 3 4 6 
> sort(table(data.xgb.clu$b2.clu))

10 11  5  7  9  8 
 1  1  2  3  3  6 
> #row:
> sort(table(data.xgb.row$a1.row))

 3  7  8 14  6  5 
 1  2  2  2  4  5 
> sort(table(data.xgb.row$a2.row))

 7 12 18  9 14  8 10 13 
 1  1  1  2  2  3  3  3 
> sort(table(data.xgb.row$a3.row))

13 15 16 17 20 21 24 25 18 19 
 1  1  1  1  1  1  1  1  2  6 
> sort(table(data.xgb.row$a4.row))

20 23 24 26 30 22 25 21 
 1  1  1  1  1  2  3  6 
> sort(table(data.xgb.row$a5.row))

26 28 29 33 30 31 32 
 1  1  1  2  3  4  4 
> sort(table(data.xgb.row$b1.row))

6 2 5 3 4 
1 2 2 4 7 
> sort(table(data.xgb.row$b2.row))

6 7 8 9 
3 3 5 5 
> #clu.row:
> sort(table(data.xgb.clu.row.aver$a1))

11  9  4  5  7  6 
 1  2  3  3  3  4 
> sort(table(data.xgb.clu.row.aver$a2))

 6  8  9 14 15  7 10 11 16 12 
 1  1  1  1  1  2  2  2  2  3 
> sort(table(data.xgb.clu.row.aver$a3))

10 14 15 19 24 17 20 22 18 
 1  1  1  1  1  2  2  2  5 
> sort(table(data.xgb.clu.row.aver$a4))

15 27 31 23 26 22 24 25 
 1  1  1  2  2  3  3  3 
> sort(table(data.xgb.clu.row.aver$a5))

26 33 34 35 27 29 30 31 
 1  1  1  1  2  2  4  4 
> sort(table(data.xgb.clu.row.aver$b1))

-1  1  2  4  6  3  5  7  8 
 1  1  1  1  1  2  3  3  3 
> sort(table(data.xgb.clu.row.aver$b2))

 3  6 12  8 10 11  9  7 
 1  1  1  2  2  2  3  4 
> #row.row:
> sort(table(data.xgb.row.row.aver$a1))

 2  4  7 11  8  9  5  3 
 1  1  1  1  2  2  3  5 
> sort(table(data.xgb.row.row.aver$a2))

 6  8  9 13 15 17 19 20 11 10 14 
 1  1  1  1  1  1  1  1  2  3  3 
> sort(table(data.xgb.row.row.aver$a3))

 5 12 15 18 19 23 24 25 26 14 17 21 
 1  1  1  1  1  1  1  1  1  2  2  3 
> sort(table(data.xgb.row.row.aver$a4))

14 18 24 28 20 21 22 27 26 
 1  1  1  1  2  2  2  2  4 
> sort(table(data.xgb.row.row.aver$a5))

20 22 24 27 28 36 33 30 32 
 1  1  1  1  1  1  2  4  4 
> sort(table(data.xgb.row.row.aver$b1))

1 5 6 8 3 4 
1 1 1 2 4 7 
> sort(table(data.xgb.row.row.aver$b2))

 4 12 13  6  8 10  9  7 
 1  1  1  2  2  2  3  4 
> 
> 
> data.xgb.clu.clu
[1]  5 16 22 21 32  3 11
> data.rdf.clu.clu
 1  1  1  1  1  1  1 
 4 13 19 22 30  5 10 
> data.xgb.row.clu
[1]  4 22 19 15 26  5 10
> data.xgb.clu.row
[1]  4 13 12 16 12  3  5
> data.xgb.row.row
[1] 16 11 12 16 21  4  5
> data.xgb.clu.cum
   a1 a2 a3 a4 a5 b1 b2
1   4  9 18 22 32  4  9
2   4  9 18 22 32  4  9
3   4  9 18 22 32  4  9
4   4  9 18 22 32  4  9
5   4  9 18 22 32  4  9
6   4  9 18 22 32  4  9
7   5  9 18 22 32  4  9
8   4  9 18 22 32  4  9
9   5  9 18 22 32  4  9
10  4  9 18 22 32  4  9
11  4  9 18 22 32  4  9
12  4  9 18 22 32  4  9
13  4  9 18 22 32  4  9
14  4  9 18 22 32  4  9
15  4  9 18 22 32  4  9
16  4  9 18 22 32  4  9
> data.xgb.row.cum
   a1 a2 a3 a4 a5 b1 b2
1   6 16 17 20 26  4 10
2   6 16 17 20 26  4 10
3   6 16 17 20 26  4 10
4   6 16 17 20 26  4 10
5   6 16 17 20 26  4 10
6   6 16 17 20 26  4 10
7   6 16 17 20 26  4 10
8   6 16 17 20 26  4 10
9   6 16 17 20 26  4 10
10  6 16 17 20 26  4 10
11  6 16 17 20 26  4 10
12  6 16 17 20 26  4 10
13  6 16 17 20 26  4 10
14  6 16 17 20 26  4 10
15  6 16 17 20 26  4 10
16  6 16 17 20 26  4 10
> 
> data.xgb.clu.clu.a<-sort(data.xgb.clu.clu[1:5])
> data.xgb.clu.clu.b<-sort(data.xgb.clu.clu[6:7])
> 
> data.rdf.clu.clu.a<-sort(as.numeric(data.rdf.clu.clu[1:5]))
> data.rdf.clu.clu.b<-sort(as.numeric(data.rdf.clu.clu[6:7]))
> 
> data.xgb.row.clu.a<-sort(data.xgb.row.clu[1:5])
> data.xgb.row.clu.b<-sort(data.xgb.row.clu[6:7])
> 
> data.xgb.clu.row.a<-sort(data.xgb.clu.row[1:5])
> data.xgb.clu.row.b<-sort(data.xgb.clu.row[6:7])
> 
> data.xgb.row.row.a<-sort(data.xgb.row.row[1:5])
> data.xgb.row.row.b<-sort(data.xgb.row.row[6:7])
> 
> r.a1<-c(data.xgb.clu.clu.a[1],data.rdf.clu.clu.a[1],data.xgb.row.clu.a[1],data.xgb.clu.row.a[1],
+         data.xgb.row.row.a[1],data.xgb.clu.cum$a1)
> r.a2<-c(data.xgb.clu.clu.a[2],data.rdf.clu.clu.a[2],data.xgb.row.clu.a[2],data.xgb.clu.row.a[2],
+         data.xgb.row.row.a[2],data.xgb.clu.cum$a2)
> r.a3<-c(data.xgb.clu.clu.a[3],data.rdf.clu.clu.a[3],data.xgb.row.clu.a[3],data.xgb.clu.row.a[3],
+         data.xgb.row.row.a[3],data.xgb.clu.cum$a3)
> r.a4<-c(data.xgb.clu.clu.a[4],data.rdf.clu.clu.a[4],data.xgb.row.clu.a[4],data.xgb.clu.row.a[4],
+         data.xgb.row.row.a[4],data.xgb.clu.cum$a4)
> r.a5<-c(data.xgb.clu.clu.a[5],data.rdf.clu.clu.a[5],data.xgb.row.clu.a[5],data.xgb.clu.row.a[5],
+         data.xgb.row.row.a[5],data.xgb.clu.cum$a5)
> r.b1<-c(data.xgb.clu.clu.b[1],data.rdf.clu.clu.b[1],data.xgb.row.clu.b[1],data.xgb.clu.row.b[1],
+         data.xgb.row.row.b[1],data.xgb.clu.cum$b1)
> r.b2<-c(data.xgb.clu.clu.b[2],data.rdf.clu.clu.b[2],data.xgb.row.clu.b[2],data.xgb.clu.row.b[2],
+         data.xgb.row.row.b[2],data.xgb.clu.cum$b2)
> 
> sort(table(r.a1))
r.a1
11  5  4 
 1  3 17 
> sort(table(r.a2))
r.a2
13 15 16 12  9 
 1  1  1  2 16 
> sort(table(r.a3))
r.a3
12 16 21 19 18 
 1  1  1  2 16 
> sort(table(r.a4))
r.a4
13 16 22 
 1  1 19 
> sort(table(r.a5))
r.a5
16 21 26 30 32 
 1  1  1  1 17 
> sort(table(r.b1))
r.b1
 3  5  4 
 2  2 17 
> sort(table(r.b2))
r.b2
11  5 10  9 
 1  2  2 16 
> ########################################################################################################
> #train.sa<-head(dlt$sa,dim(dlt)[1]-1)
> #train.sb<-head(dlt$sb,dim(dlt)[1]-1)
> #result.sa<-tail(dlt$sa,dim(dlt)[1]-1)
> #result.sb<-tail(dlt$sb,dim(dlt)[1]-1)
> 
> #train
> sa.1<-dlt$sa[1:(dim(dlt)[1]-3)]
> sa.2<-dlt$sa[2:(dim(dlt)[1]-2)]
> sa.3<-dlt$sa[3:(dim(dlt)[1]-1)]
> result.sa<-dlt$sa[4:dim(dlt)[1]]
> trains.sa<-data.frame(sa.1,sa.2,sa.3,result.sa)
> trains.T.sa<-Matrix(as.matrix(trains.sa[,1:3]),sparse=T)
> bst.sa<-xgboost(data = trains.T.sa,label = trains.sa$result.sa,nrounds = 300,print_every_n = 300L)
[1]	train-rmse:65.930107 
[300]	train-rmse:0.126428 
> 
> 
> sb.1<-dlt$sb[1:(dim(dlt)[1]-3)]
> sb.2<-dlt$sb[2:(dim(dlt)[1]-2)]
> sb.3<-dlt$sb[3:(dim(dlt)[1]-1)]
> result.sb<-dlt$sb[4:dim(dlt)[1]]
> trains.sb<-data.frame(sb.1,sb.2,sb.3,result.sb)
> trains.T.sb<-Matrix(as.matrix(trains.sb[,1:3]),sparse=T)
> bst.sb<-xgboost(data = trains.T.sb,label = trains.sb$result.sb,nrounds = 300,print_every_n = 300L)
[1]	train-rmse:9.951271 
[300]	train-rmse:0.963294 
> 
> #predoct
> sa.1<-dlt$sa[2:(dim(dlt)[1]-2)]
> sa.2<-dlt$sa[3:(dim(dlt)[1]-1)]
> sa.3<-dlt$sa[4:dim(dlt)[1]]
> tests.sa<-data.frame(sa.1,sa.2,sa.3)
> tests.T.sa<-Matrix(as.matrix(tests.sa),sparse=T)
> testPredictions.sa <- predict(object = bst.sa,newdata = tests.T.sa)
> 
> sb.1<-dlt$sb[2:(dim(dlt)[1]-2)]
> sb.2<-dlt$sb[3:(dim(dlt)[1]-1)]
> sb.3<-dlt$sb[4:dim(dlt)[1]]
> tests.sb<-data.frame(sb.1,sb.2,sb.3)
> tests.T.sb<-Matrix(as.matrix(tests.sb),sparse=T)
> testPredictions.sb <- predict(object = bst.sb,newdata = tests.T.sb)
> 
> sa.pre<-round(testPredictions.sa)
> sb.pre<-round(testPredictions.sb)
> 
> c(tail(sa.pre,1),tail(sb.pre,1))
[1] 95 15
> 