> #clu:
> sort(table(data.xgb.clu$a1.clu))

 2  5  8 10  1  3  4  6  7 
 1  1  1  1  2  2  2  2  4 
> sort(table(data.xgb.clu$a2.clu))

 9 12 10 11 13 
 2  2  4  4  4 
> sort(table(data.xgb.clu$a3.clu))

21 15 17 19 16 18 
 1  2  2  3  4  4 
> sort(table(data.xgb.clu$a4.clu))

24 27 22 25 23 26 
 1  1  3  3  4  4 
> sort(table(data.xgb.clu$a5.clu))

32 35 34 30 33 31 
 1  1  2  3  3  6 
> sort(table(data.xgb.clu$b1.clu))

1 5 2 3 4 
1 1 2 4 8 
> sort(table(data.xgb.clu$b2.clu))

 5  7  6 10  9  8 
 1  1  2  2  4  6 
> #row:
> sort(table(data.xgb.row$a1.row))

10  7  8  6  4  5 
 1  2  2  3  4  4 
> sort(table(data.xgb.row$a2.row))

 8  9 14 19  7 10 11 13 12 
 1  1  1  1  2  2  2  2  4 
> sort(table(data.xgb.row$a3.row))

14 15 17 23 20 21 16 19 
 1  1  1  1  2  2  4  4 
> sort(table(data.xgb.row$a4.row))

18 21 22 26 28 20 24 25 23 
 1  1  1  1  1  2  2  3  4 
> sort(table(data.xgb.row$a5.row))

27 31 34 32 28 29 30 
 1  1  1  2  3  3  5 
> sort(table(data.xgb.row$b1.row))

5 6 7 4 2 3 
1 1 1 2 3 8 
> sort(table(data.xgb.row$b2.row))

 4  8  9 10  7 
 1  2  4  4  5 
> #clu.row:
> sort(table(data.xgb.clu.row.aver$a1))

0 5 4 8 7 
1 2 3 3 7 
> sort(table(data.xgb.clu.row.aver$a2))

 7  8  9 10 17 14 15 13 12 
 1  1  1  1  1  2  2  3  4 
> sort(table(data.xgb.clu.row.aver$a3))

13 14 17 22 12 15 19 21 18 
 1  1  1  1  2  2  2  2  4 
> sort(table(data.xgb.clu.row.aver$a4))

27 28 31 22 26 23 25 
 1  1  1  2  2  4  5 
> sort(table(data.xgb.clu.row.aver$a5))

28 35 32 33 34 31 30 
 1  1  2  2  2  3  5 
> sort(table(data.xgb.clu.row.aver$b1))

0 6 7 8 2 4 5 3 
1 1 1 1 2 2 3 5 
> sort(table(data.xgb.clu.row.aver$b2))

 5  6 10 11 12  9  8 
 1  1  1  1  1  4  7 
> #row.row:
> sort(table(data.xgb.row.row.aver$a1))

0 2 4 5 8 3 6 7 9 
1 1 1 1 1 2 2 3 4 
> sort(table(data.xgb.row.row.aver$a2))

 2  4  6  7  9 11 13 14 17 18 20 12 10 
 1  1  1  1  1  1  1  1  1  1  1  2  3 
> sort(table(data.xgb.row.row.aver$a3))

 9 10 14 15 17 18 19 23 13 21 16 
 1  1  1  1  1  1  1  1  2  2  4 
> sort(table(data.xgb.row.row.aver$a4))

 9 10 11 19 22 25 26 29 31 20 21 24 
 1  1  1  1  1  1  1  1  1  2  2  3 
> sort(table(data.xgb.row.row.aver$a5))

23 25 26 27 29 30 31 32 28 
 1  1  1  1  1  2  2  3  4 
> sort(table(data.xgb.row.row.aver$b1))

 1  7  8 12  3  5  6  4 
 1  1  1  1  2  2  3  5 
> sort(table(data.xgb.row.row.aver$b2))

11 12  7 10  8  9 
 1  1  2  2  3  7 
> 
> 
> data.xgb.clu.clu
[1]  9  9 19 25 32  4 10
> data.rdf.clu.clu
 1  1  1  1  1  1  1 
 7 10 18 23 32  3  8 
> data.xgb.row.clu
[1]  4 28 20 23 24  5 10
> data.xgb.clu.row
[1] 26 12  7 16  8  7  6
> data.xgb.row.row
[1]  8 24 11 14 21  6  6
> data.xgb.clu.cum
   a1 a2 a3 a4 a5 b1 b2
1  10 12 16 22 32  3  9
2  10 12 16 22 32  3  9
3   9 12 16 22 32  3  9
4  10 12 16 22 32  3  9
5  10 12 16 22 32  3  9
6  10 12 16 22 32  3  9
7  10 13 16 22 32  3  9
8  10 12 16 22 32  3  9
9  10 12 16 22 32  3  9
10 10 12 16 22 32  3  9
11 10 12 16 22 32  3  9
12 10 12 16 22 32  3  9
13 10 12 16 22 32  3  9
14 10 12 16 22 32  3  9
15 10 12 16 22 32  3  9
16 10 12 16 22 32  3  9
> data.xgb.row.cum
   a1 a2 a3 a4 a5 b1 b2
1   2 24 15 25 26  5 11
2   2 24 15 25 26  5 11
3   2 24 15 25 26  5 11
4   2 24 15 25 26  5 11
5   2 24 15 25 26  5 11
6   2 24 15 25 26  5 11
7   2 24 15 25 26  5 11
8   2 24 15 25 26  5 11
9   2 24 15 25 26  5 11
10  2 24 15 25 26  5 11
11  2 24 15 25 26  5 11
12  2 24 15 25 26  5 11
13  2 24 15 25 26  5 11
14  2 24 15 25 26  5 11
15  2 24 15 25 26  5 11
16  2 24 15 25 26  5 11
> 
> data.xgb.clu.clu.a<-sort(data.xgb.clu.clu[1:5])
> data.xgb.clu.clu.b<-sort(data.xgb.clu.clu[6:7])
> 
> data.rdf.clu.clu.a<-sort(as.numeric(data.rdf.clu.clu[1:5]))
> data.rdf.clu.clu.b<-sort(as.numeric(data.rdf.clu.clu[6:7]))
> 
> data.xgb.row.clu.a<-sort(data.xgb.row.clu[1:5])
> data.xgb.row.clu.b<-sort(data.xgb.row.clu[6:7])
> 
> data.xgb.clu.row.a<-sort(data.xgb.clu.row[1:5])
> data.xgb.clu.row.b<-sort(data.xgb.clu.row[6:7])
> 
> data.xgb.row.row.a<-sort(data.xgb.row.row[1:5])
> data.xgb.row.row.b<-sort(data.xgb.row.row[6:7])
> 
> r.a1<-c(data.xgb.clu.clu.a[1],data.rdf.clu.clu.a[1],data.xgb.row.clu.a[1],data.xgb.clu.row.a[1],
+         data.xgb.row.row.a[1],data.xgb.clu.cum$a1)
> r.a2<-c(data.xgb.clu.clu.a[2],data.rdf.clu.clu.a[2],data.xgb.row.clu.a[2],data.xgb.clu.row.a[2],
+         data.xgb.row.row.a[2],data.xgb.clu.cum$a2)
> r.a3<-c(data.xgb.clu.clu.a[3],data.rdf.clu.clu.a[3],data.xgb.row.clu.a[3],data.xgb.clu.row.a[3],
+         data.xgb.row.row.a[3],data.xgb.clu.cum$a3)
> r.a4<-c(data.xgb.clu.clu.a[4],data.rdf.clu.clu.a[4],data.xgb.row.clu.a[4],data.xgb.clu.row.a[4],
+         data.xgb.row.row.a[4],data.xgb.clu.cum$a4)
> r.a5<-c(data.xgb.clu.clu.a[5],data.rdf.clu.clu.a[5],data.xgb.row.clu.a[5],data.xgb.clu.row.a[5],
+         data.xgb.row.row.a[5],data.xgb.clu.cum$a5)
> r.b1<-c(data.xgb.clu.clu.b[1],data.rdf.clu.clu.b[1],data.xgb.row.clu.b[1],data.xgb.clu.row.b[1],
+         data.xgb.row.row.b[1],data.xgb.clu.cum$b1)
> r.b2<-c(data.xgb.clu.clu.b[2],data.rdf.clu.clu.b[2],data.xgb.row.clu.b[2],data.xgb.clu.row.b[2],
+         data.xgb.row.row.b[2],data.xgb.clu.cum$b2)
> 
> sort(table(r.a1))
r.a1
 4  8  7  9 10 
 1  1  2  2 15 
> sort(table(r.a2))
r.a2
 8  9 10 11 13 20 12 
 1  1  1  1  1  1 15 
> sort(table(r.a3))
r.a3
12 14 18 19 23 16 
 1  1  1  1  1 16 
> sort(table(r.a4))
r.a4
16 21 23 24 25 22 
 1  1  1  1  1 16 
> sort(table(r.a5))
r.a5
24 26 28 32 
 1  1  1 18 
> sort(table(r.b1))
r.b1
 4  5  6  3 
 1  1  2 17 
> sort(table(r.b2))
r.b2
 6  7  8 10  9 
 1  1  1  2 16 
> ########################################################################################################
> #train.sa<-head(dlt$sa,dim(dlt)[1]-1)
> #train.sb<-head(dlt$sb,dim(dlt)[1]-1)
> #result.sa<-tail(dlt$sa,dim(dlt)[1]-1)
> #result.sb<-tail(dlt$sb,dim(dlt)[1]-1)
> 
> #train
> sa.1<-dlt$sa[1:(dim(dlt)[1]-3)]
> sa.2<-dlt$sa[2:(dim(dlt)[1]-2)]
> sa.3<-dlt$sa[3:(dim(dlt)[1]-1)]
> result.sa<-dlt$sa[4:dim(dlt)[1]]
> trains.sa<-data.frame(sa.1,sa.2,sa.3,result.sa)
> trains.T.sa<-Matrix(as.matrix(trains.sa[,1:3]),sparse=T)
> bst.sa<-xgboost(data = trains.T.sa,label = trains.sa$result.sa,nrounds = 300,print_every_n = 300L)
[1]	train-rmse:65.923210 
[300]	train-rmse:0.133983 
> 
> 
> sb.1<-dlt$sb[1:(dim(dlt)[1]-3)]
> sb.2<-dlt$sb[2:(dim(dlt)[1]-2)]
> sb.3<-dlt$sb[3:(dim(dlt)[1]-1)]
> result.sb<-dlt$sb[4:dim(dlt)[1]]
> trains.sb<-data.frame(sb.1,sb.2,sb.3,result.sb)
> trains.T.sb<-Matrix(as.matrix(trains.sb[,1:3]),sparse=T)
> bst.sb<-xgboost(data = trains.T.sb,label = trains.sb$result.sb,nrounds = 300,print_every_n = 300L)
[1]	train-rmse:9.966666 
[300]	train-rmse:0.958345 
> 
> #predoct
> sa.1<-dlt$sa[2:(dim(dlt)[1]-2)]
> sa.2<-dlt$sa[3:(dim(dlt)[1]-1)]
> sa.3<-dlt$sa[4:dim(dlt)[1]]
> tests.sa<-data.frame(sa.1,sa.2,sa.3)
> tests.T.sa<-Matrix(as.matrix(tests.sa),sparse=T)
> testPredictions.sa <- predict(object = bst.sa,newdata = tests.T.sa)
> 
> sb.1<-dlt$sb[2:(dim(dlt)[1]-2)]
> sb.2<-dlt$sb[3:(dim(dlt)[1]-1)]
> sb.3<-dlt$sb[4:dim(dlt)[1]]
> tests.sb<-data.frame(sb.1,sb.2,sb.3)
> tests.T.sb<-Matrix(as.matrix(tests.sb),sparse=T)
> testPredictions.sb <- predict(object = bst.sb,newdata = tests.T.sb)
> 
> sa.pre<-round(testPredictions.sa)
> sb.pre<-round(testPredictions.sb)
> 
> c(tail(sa.pre,1),tail(sb.pre,1))
[1] 97 13

