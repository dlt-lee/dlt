> #clu:
> sort(table(data.xgb.clu$a1.clu))

1 3 8 4 5 6 7 
1 1 2 3 3 3 3 
> sort(table(data.xgb.clu$a2.clu))

 2 12 14 18 19 10 11 13 16 15 
 1  1  1  1  1  2  2  2  2  3 
> sort(table(data.xgb.clu$a3.clu))

 7 10 11 13 18 16 19 20 15 
 1  1  1  1  1  2  2  3  4 
> sort(table(data.xgb.clu$a4.clu))

15 18 24 25 16 17 21 
 1  1  1  1  2  2  8 
> sort(table(data.xgb.clu$a5.clu))

27 29 33 34 26 31 32 30 
 1  1  1  1  2  2  3  5 
> sort(table(data.xgb.clu$b1.clu))

2 3 5 6 4 
1 2 4 4 5 
> sort(table(data.xgb.clu$b2.clu))

 6 10  9  7  8 
 1  1  2  5  7 
> #row:
> sort(table(data.xgb.row$a1.row))

 4  7  8  9 13  5  6 10 
 1  1  1  1  1  3  4  4 
> sort(table(data.xgb.row$a2.row))

 9 16 18 10 11 12 15 14 
 1  1  1  2  2  2  3  4 
> sort(table(data.xgb.row$a3.row))

11 12 15 18 16 17 19 14 20 
 1  1  1  1  2  2  2  3  3 
> sort(table(data.xgb.row$a4.row))

16 23 27 17 22 25 24 21 
 1  1  1  2  2  2  3  4 
> sort(table(data.xgb.row$a5.row))

24 28 32 26 29 27 30 31 
 1  1  1  2  2  3  3  3 
> sort(table(data.xgb.row$b1.row))

2 5 6 4 3 
1 1 1 6 7 
> sort(table(data.xgb.row$b2.row))

 8  7  9 10 11 
 1  2  4  4  5 
> #clu.row:
> sort(table(data.xgb.clu.row.aver$a1))

 2  3  4 11 13 14  1  6  5  7 
 1  1  1  1  1  1  2  2  3  3 
> sort(table(data.xgb.clu.row.aver$a2))

 7  9 12 13 14 20  5 15 16 11 
 1  1  1  1  1  1  2  2  2  4 
> sort(table(data.xgb.clu.row.aver$a3))

11 14 15 19 20 21 10 16 17 18 
 1  1  1  1  1  1  2  2  2  4 
> sort(table(data.xgb.clu.row.aver$a4))

17 21 24 26 28 22 23 20 25 
 1  1  1  1  1  2  2  3  4 
> sort(table(data.xgb.clu.row.aver$a5))

27 29 26 34 31 33 30 
 1  1  2  2  3  3  4 
> sort(table(data.xgb.clu.row.aver$b1))

 0  6 10  2  5  3  4  7 
 1  1  1  2  2  3  3  3 
> sort(table(data.xgb.clu.row.aver$b2))

 7 12  5 11  8  9 10 
 1  1  2  2  3  3  4 
> #row.row:
> sort(table(data.xgb.row.row.aver$a1))

 1  3  6  7 11  2  4  5  8  9 
 1  1  1  1  1  2  2  2  2  3 
> sort(table(data.xgb.row.row.aver$a2))

 5  8 11 16 17 23  9 15 12 13 
 1  1  1  1  1  1  2  2  3  3 
> sort(table(data.xgb.row.row.aver$a3))

12 17 21 15 16 18 14 19 
 1  1  1  2  2  2  3  4 
> sort(table(data.xgb.row.row.aver$a4))

21 22 25 31 34 13 26 23 24 
 1  1  1  1  1  2  2  3  4 
> sort(table(data.xgb.row.row.aver$a5))

22 29 33 37 26 28 30 34 32 
 1  1  1  1  2  2  2  2  4 
> sort(table(data.xgb.row.row.aver$b1))

8 3 7 5 4 6 
1 2 2 3 4 4 
> sort(table(data.xgb.row.row.aver$b2))

 5  6  7  8 11 10  9 
 1  1  1  1  2  4  6 
> 
> 
> data.xgb.clu.clu
[1]  4 10 19 19 30  4 10
> data.rdf.clu.clu
 1  1  1  1  1  1  1 
 5 10 17 21 30  5 10 
> data.xgb.row.clu
[1] 11 18 16 22 33  6  9
> data.xgb.clu.row
[1] 15 17 13 21 22  2  4
> data.xgb.row.row
[1]  9 15 14 20 29  3  5
> data.xgb.clu.cum
   a1 a2 a3 a4 a5 b1 b2
1   5 11 16 21 31  4 11
2   5 11 16 21 31  4 11
3   5 11 16 21 31  4 11
4   5 11 16 21 31  4 11
5   5 11 16 21 31  4 11
6   5 11 16 21 31  4 11
7   5 11 16 21 31  4 11
8   5 11 16 21 31  4 11
9   5 11 16 21 31  4 11
10  5 11 16 21 31  4 11
11  5 11 16 21 31  4 11
12  5 11 16 21 31  4 11
13  5 11 16 21 31  4 11
14  5 11 16 21 31  4 11
15  5 11 16 21 31  4 11
16  5 11 16 21 31  4 11
> data.xgb.row.cum
   a1 a2 a3 a4 a5 b1 b2
1  11 23 18 18 34  6  9
2  11 23 18 18 34  6  9
3  11 23 18 18 34  6  9
4  11 23 18 18 34  6  9
5  11 23 18 18 34  6  9
6  11 23 18 18 34  6  9
7  11 23 18 18 34  6  9
8  11 23 18 18 34  6  9
9  11 23 18 18 34  6  9
10 11 23 18 18 34  6  9
11 11 23 18 18 34  6  9
12 11 23 18 18 34  6  9
13 11 23 18 18 34  6  9
14 11 23 18 18 34  6  9
15 11 23 18 18 34  6  9
16 11 23 18 18 34  6  9
> 
> data.xgb.clu.clu.a<-sort(data.xgb.clu.clu[1:5])
> data.xgb.clu.clu.b<-sort(data.xgb.clu.clu[6:7])
> 
> data.rdf.clu.clu.a<-sort(as.numeric(data.rdf.clu.clu[1:5]))
> data.rdf.clu.clu.b<-sort(as.numeric(data.rdf.clu.clu[6:7]))
> 
> data.xgb.row.clu.a<-sort(data.xgb.row.clu[1:5])
> data.xgb.row.clu.b<-sort(data.xgb.row.clu[6:7])
> 
> data.xgb.clu.row.a<-sort(data.xgb.clu.row[1:5])
> data.xgb.clu.row.b<-sort(data.xgb.clu.row[6:7])
> 
> data.xgb.row.row.a<-sort(data.xgb.row.row[1:5])
> data.xgb.row.row.b<-sort(data.xgb.row.row[6:7])
> 
> r.a1<-c(data.xgb.clu.clu.a[1],data.rdf.clu.clu.a[1],data.xgb.row.clu.a[1],data.xgb.clu.row.a[1],
+         data.xgb.row.row.a[1],data.xgb.clu.cum$a1)
> r.a2<-c(data.xgb.clu.clu.a[2],data.rdf.clu.clu.a[2],data.xgb.row.clu.a[2],data.xgb.clu.row.a[2],
+         data.xgb.row.row.a[2],data.xgb.clu.cum$a2)
> r.a3<-c(data.xgb.clu.clu.a[3],data.rdf.clu.clu.a[3],data.xgb.row.clu.a[3],data.xgb.clu.row.a[3],
+         data.xgb.row.row.a[3],data.xgb.clu.cum$a3)
> r.a4<-c(data.xgb.clu.clu.a[4],data.rdf.clu.clu.a[4],data.xgb.row.clu.a[4],data.xgb.clu.row.a[4],
+         data.xgb.row.row.a[4],data.xgb.clu.cum$a4)
> r.a5<-c(data.xgb.clu.clu.a[5],data.rdf.clu.clu.a[5],data.xgb.row.clu.a[5],data.xgb.clu.row.a[5],
+         data.xgb.row.row.a[5],data.xgb.clu.cum$a5)
> r.b1<-c(data.xgb.clu.clu.b[1],data.rdf.clu.clu.b[1],data.xgb.row.clu.b[1],data.xgb.clu.row.b[1],
+         data.xgb.row.row.b[1],data.xgb.clu.cum$b1)
> r.b2<-c(data.xgb.clu.clu.b[2],data.rdf.clu.clu.b[2],data.xgb.row.clu.b[2],data.xgb.clu.row.b[2],
+         data.xgb.row.row.b[2],data.xgb.clu.cum$b2)
> 
> sort(table(r.a1))
r.a1
 4  9 11 13  5 
 1  1  1  1 17 
> sort(table(r.a2))
r.a2
14 15 16 10 11 
 1  1  1  2 16 
> sort(table(r.a3))
r.a3
15 18 19 17 16 
 1  1  1  2 16 
> sort(table(r.a4))
r.a4
19 20 22 21 
 1  1  1 18 
> sort(table(r.a5))
r.a5
22 29 33 30 31 
 1  1  1  2 16 
> sort(table(r.b1))
r.b1
 2  3  5  6  4 
 1  1  1  1 17 
> sort(table(r.b2))
r.b2
 4  5  9 10 11 
 1  1  1  2 16 
> ########################################################################################################
> #train.sa<-head(dlt$sa,dim(dlt)[1]-1)
> #train.sb<-head(dlt$sb,dim(dlt)[1]-1)
> #result.sa<-tail(dlt$sa,dim(dlt)[1]-1)
> #result.sb<-tail(dlt$sb,dim(dlt)[1]-1)
> 
> #train
> sa.1<-dlt$sa[1:(dim(dlt)[1]-3)]
> sa.2<-dlt$sa[2:(dim(dlt)[1]-2)]
> sa.3<-dlt$sa[3:(dim(dlt)[1]-1)]
> result.sa<-dlt$sa[4:dim(dlt)[1]]
> trains.sa<-data.frame(sa.1,sa.2,sa.3,result.sa)
> trains.T.sa<-Matrix(as.matrix(trains.sa[,1:3]),sparse=T)
> bst.sa<-xgboost(data = trains.T.sa,label = trains.sa$result.sa,nrounds = 300,print_every_n = 300L)
[1]	train-rmse:65.811333 
[300]	train-rmse:0.097452 
> 
> 
> sb.1<-dlt$sb[1:(dim(dlt)[1]-3)]
> sb.2<-dlt$sb[2:(dim(dlt)[1]-2)]
> sb.3<-dlt$sb[3:(dim(dlt)[1]-1)]
> result.sb<-dlt$sb[4:dim(dlt)[1]]
> trains.sb<-data.frame(sb.1,sb.2,sb.3,result.sb)
> trains.T.sb<-Matrix(as.matrix(trains.sb[,1:3]),sparse=T)
> bst.sb<-xgboost(data = trains.T.sb,label = trains.sb$result.sb,nrounds = 300,print_every_n = 300L)
[1]	train-rmse:9.979595 
[300]	train-rmse:1.007169 
> 
> #predoct
> sa.1<-dlt$sa[2:(dim(dlt)[1]-2)]
> sa.2<-dlt$sa[3:(dim(dlt)[1]-1)]
> sa.3<-dlt$sa[4:dim(dlt)[1]]
> tests.sa<-data.frame(sa.1,sa.2,sa.3)
> tests.T.sa<-Matrix(as.matrix(tests.sa),sparse=T)
> testPredictions.sa <- predict(object = bst.sa,newdata = tests.T.sa)
> 
> sb.1<-dlt$sb[2:(dim(dlt)[1]-2)]
> sb.2<-dlt$sb[3:(dim(dlt)[1]-1)]
> sb.3<-dlt$sb[4:dim(dlt)[1]]
> tests.sb<-data.frame(sb.1,sb.2,sb.3)
> tests.T.sb<-Matrix(as.matrix(tests.sb),sparse=T)
> testPredictions.sb <- predict(object = bst.sb,newdata = tests.T.sb)
> 
> sa.pre<-round(testPredictions.sa)
> sb.pre<-round(testPredictions.sb)
> 
> c(tail(sa.pre,1),tail(sb.pre,1))
[1] 78 10
> 