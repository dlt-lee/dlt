> #clu:
> sort(table(data.xgb.clu$a1.clu))

5 7 3 4 6 
2 2 3 4 5 
> sort(table(data.xgb.clu$a2.clu))

14 15 13 11  9 12 
 1  1  2  3  4  5 
> sort(table(data.xgb.clu$a3.clu))

18 21 25 26 23 24 27 20 22 
 1  1  1  1  2  2  2  3  3 
> sort(table(data.xgb.clu$a4.clu))

20 21 29 26 28 23 24 
 1  1  1  2  3  4  4 
> sort(table(data.xgb.clu$a5.clu))

26 27 29 33 22 31 28 30 
 1  1  1  1  2  2  4  4 
> sort(table(data.xgb.clu$b1.clu))

7 1 3 4 2 5 
1 2 2 3 4 4 
> sort(table(data.xgb.clu$b2.clu))

 5 11 13  8 10  9 
 1  1  1  4  4  5 
> #row:
> sort(table(data.xgb.row$a1.row))

2 7 8 6 4 5 3 
1 1 1 2 3 3 5 
> sort(table(data.xgb.row$a2.row))

 8 13  9 10 14 15 11 12 
 1  1  2  2  2  2  3  3 
> sort(table(data.xgb.row$a3.row))

23 19 22 18 21 20 
 1  2  2  3  3  5 
> sort(table(data.xgb.row$a4.row))

21 22 23 26 29 24 25 28 30 27 
 1  1  1  1  1  2  2  2  2  3 
> sort(table(data.xgb.row$a5.row))

24 25 26 28 27 31 30 32 
 1  1  1  1  2  2  3  5 
> sort(table(data.xgb.row$b1.row))

 1  2  5  4  3 
 1  1  1  2 11 
> sort(table(data.xgb.row$b2.row))

 6 11 10  8  9  7 
 1  1  2  3  4  5 
> #clu.row:
> sort(table(data.xgb.clu.row.aver$a1))

1 2 5 7 8 9 4 6 3 
1 1 1 1 1 1 3 3 4 
> sort(table(data.xgb.clu.row.aver$a2))

 8  9 10 15 19 13  7 11 14 
 1  1  1  1  1  2  3  3  3 
> sort(table(data.xgb.clu.row.aver$a3))

 5  7 11 13 15 17 18 21 22 12 14 20 
 1  1  1  1  1  1  1  1  1  2  2  3 
> sort(table(data.xgb.clu.row.aver$a4))

14 15 18 19 20 21 25 27 28 29 24 23 
 1  1  1  1  1  1  1  1  1  1  2  4 
> sort(table(data.xgb.clu.row.aver$a5))

22 25 26 27 28 30 32 23 31 29 
 1  1  1  1  1  1  1  2  3  4 
> sort(table(data.xgb.clu.row.aver$b1))

 2  6  7  9 10  3  4  5 
 1  1  1  1  1  2  4  5 
> sort(table(data.xgb.clu.row.aver$b2))

14  8 11  9 10 
 1  2  2  3  8 
> #row.row:
> sort(table(data.xgb.row.row.aver$a1))

 2  5  7  9 10  6  8  4  3 
 1  1  1  1  1  2  2  3  4 
> sort(table(data.xgb.row.row.aver$a2))

 6 11 14 15 16  7  8 13 12 
 1  1  1  1  1  2  2  3  4 
> sort(table(data.xgb.row.row.aver$a3))

12 15 22 24 26 18 19 16 
 1  1  1  1  1  3  3  5 
> sort(table(data.xgb.row.row.aver$a4))

22 24 29 20 23 26 27 28 21 
 1  1  1  2  2  2  2  2  3 
> sort(table(data.xgb.row.row.aver$a5))

25 28 32 35 27 30 33 34 31 
 1  1  1  1  2  2  2  2  4 
> sort(table(data.xgb.row.row.aver$b1))

2 6 8 3 4 5 
2 2 2 3 3 4 
> sort(table(data.xgb.row.row.aver$b2))

 7  8  9 10 
 2  2  5  7 
> 
> 
> data.xgb.clu.clu
[1]  4 15 19 21 30  6  5
> data.rdf.clu.clu
 1  1  1  1  1  1  1 
 6 12 18 24 31  4  7 
> data.xgb.row.clu
[1]  7 11 13 25 30  6  8
> data.xgb.clu.row
[1] 10 10 19 24 25  5  4
> data.xgb.row.row
[1]  9 11 14 14 23  4  6
> data.xgb.clu.cum
   a1 a2 a3 a4 a5 b1 b2
1   3 12 18 23 30  5  6
2   3 13 18 23 30  5  6
3   3 13 18 23 30  5  6
4   3 13 18 23 30  5  6
5   3 13 18 23 30  5  6
6   3 13 18 23 30  5  6
7   3 13 18 23 30  5  6
8   3 12 18 23 30  5  6
9   3 12 18 23 30  5  6
10  3 12 18 23 30  5  6
11  3 12 18 23 30  5  6
12  3 12 18 23 30  5  6
13  3 13 18 23 30  5  6
14  3 13 18 23 30  5  6
15  3 13 18 23 30  5  6
16  3 12 18 23 30  5  6
> data.xgb.row.cum
   a1 a2 a3 a4 a5 b1 b2
1   5 10 20 26 30  4  8
2   5 10 20 26 30  4  8
3   5 10 20 26 30  4  8
4   5 10 20 26 30  4  8
5   5 10 20 26 30  4  8
6   5 10 20 26 30  4  8
7   5 10 20 26 30  4  8
8   5 10 20 26 30  4  8
9   5 10 20 26 30  4  8
10  5 10 20 26 30  4  8
11  5 10 20 26 30  4  8
12  5 10 20 26 30  4  8
13  5 10 20 26 30  4  8
14  5 10 20 26 30  4  8
15  5 10 20 26 30  4  8
16  5 10 20 26 30  4  8
> 
> ########################################################################################################
> #train.sa<-head(dlt$sa,dim(dlt)[1]-1)
> #train.sb<-head(dlt$sb,dim(dlt)[1]-1)
> #result.sa<-tail(dlt$sa,dim(dlt)[1]-1)
> #result.sb<-tail(dlt$sb,dim(dlt)[1]-1)
> 
> #train
> sa.1<-dlt$sa[1:(dim(dlt)[1]-3)]
> sa.2<-dlt$sa[2:(dim(dlt)[1]-2)]
> sa.3<-dlt$sa[3:(dim(dlt)[1]-1)]
> result.sa<-dlt$sa[4:dim(dlt)[1]]
> trains.sa<-data.frame(sa.1,sa.2,sa.3,result.sa)
> trains.T.sa<-Matrix(as.matrix(trains.sa[,1:3]),sparse=T)
> bst.sa<-xgboost(data = trains.T.sa,label = trains.sa$result.sa,nrounds = 300,print_every_n = 300L)
[1]	train-rmse:65.933784 
[300]	train-rmse:0.085596 
> 
> 
> sb.1<-dlt$sb[1:(dim(dlt)[1]-3)]
> sb.2<-dlt$sb[2:(dim(dlt)[1]-2)]
> sb.3<-dlt$sb[3:(dim(dlt)[1]-1)]
> result.sb<-dlt$sb[4:dim(dlt)[1]]
> trains.sb<-data.frame(sb.1,sb.2,sb.3,result.sb)
> trains.T.sb<-Matrix(as.matrix(trains.sb[,1:3]),sparse=T)
> bst.sb<-xgboost(data = trains.T.sb,label = trains.sb$result.sb,nrounds = 300,print_every_n = 300L)
[1]	train-rmse:9.949186 
[300]	train-rmse:0.970480 
> 
> #predoct
> sa.1<-dlt$sa[2:(dim(dlt)[1]-2)]
> sa.2<-dlt$sa[3:(dim(dlt)[1]-1)]
> sa.3<-dlt$sa[4:dim(dlt)[1]]
> tests.sa<-data.frame(sa.1,sa.2,sa.3)
> tests.T.sa<-Matrix(as.matrix(tests.sa),sparse=T)
> testPredictions.sa <- predict(object = bst.sa,newdata = tests.T.sa)
> 
> sb.1<-dlt$sb[2:(dim(dlt)[1]-2)]
> sb.2<-dlt$sb[3:(dim(dlt)[1]-1)]
> sb.3<-dlt$sb[4:dim(dlt)[1]]
> tests.sb<-data.frame(sb.1,sb.2,sb.3)
> tests.T.sb<-Matrix(as.matrix(tests.sb),sparse=T)
> testPredictions.sb <- predict(object = bst.sb,newdata = tests.T.sb)
> 
> sa.pre<-round(testPredictions.sa)
> sb.pre<-round(testPredictions.sb)
> 
> c(tail(sa.pre,1),tail(sb.pre,1))
[1] 100  18
> 