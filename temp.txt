> #clu:
> sort(table(data.xgb.clu$a1.clu))

2 6 8 3 5 4 
1 1 1 4 4 5 
> sort(table(data.xgb.clu$a2.clu))

 5  6  7 10  9 12  8 
 1  1  1  2  3  3  5 
> sort(table(data.xgb.clu$a3.clu))

18 19 23 27 28 17 21 22 20 
 1  1  1  1  1  2  2  2  5 
> sort(table(data.xgb.clu$a4.clu))

17 19 22 26 28 29 18 23 24 25 27 
 1  1  1  1  1  1  2  2  2  2  2 
> sort(table(data.xgb.clu$a5.clu))

23 30 35 29 33 32 31 
 1  1  1  2  2  4  5 
> sort(table(data.xgb.clu$b1.clu))

8 4 3 5 7 6 
1 2 3 3 3 4 
> sort(table(data.xgb.clu$b2.clu))

10  7  5  9  8 
 1  2  3  3  7 
> #row:
> sort(table(data.xgb.row$a1.row))

 2  3 11  6  8  7 
 1  1  1  4  4  5 
> sort(table(data.xgb.row$a2.row))

 6 10 13 14 11 16  8  9 
 1  1  1  1  2  2  3  5 
> sort(table(data.xgb.row$a3.row))

19 16 17 20 22 18 15 
 1  2  2  2  2  3  4 
> sort(table(data.xgb.row$a4.row))

20 21 22 23 24 27 19 25 26 28 
 1  1  1  1  1  1  2  2  3  3 
> sort(table(data.xgb.row$a5.row))

28 29 30 34 33 32 31 
 1  1  1  1  2  4  6 
> sort(table(data.xgb.row$b1.row))

6 7 4 5 3 
1 1 4 4 6 
> sort(table(data.xgb.row$b2.row))

 5 10  6  9  7  8 
 1  1  2  2  5  5 
> #clu.row:
> sort(table(data.xgb.clu.row.aver$a1))

0 3 8 9 4 7 6 5 
1 1 1 1 2 2 3 5 
> sort(table(data.xgb.clu.row.aver$a2))

 3  4 11 17  8  9 12 10 16 
 1  1  1  1  2  2  2  3  3 
> sort(table(data.xgb.clu.row.aver$a3))

11 12 13 14 15 17 21 24 25 16 18 20 
 1  1  1  1  1  1  1  1  1  2  2  3 
> sort(table(data.xgb.clu.row.aver$a4))

18 21 23 27 28 24 25 20 26 
 1  1  1  1  1  2  2  3  4 
> sort(table(data.xgb.clu.row.aver$a5))

22 26 27 28 30 36 24 29 31 32 33 
 1  1  1  1  1  1  2  2  2  2  2 
> sort(table(data.xgb.clu.row.aver$b1))

0 2 3 4 7 6 5 
1 1 2 2 2 3 5 
> sort(table(data.xgb.clu.row.aver$b2))

 6 12 13  7 10 11  8  9 
 1  1  1  2  2  2  3  4 
> #row.row:
> sort(table(data.xgb.row.row.aver$a1))

 2  3  5  8 12 13  4  9 10  7 
 1  1  1  1  1  1  2  2  2  4 
> sort(table(data.xgb.row.row.aver$a2))

 6  7 10 13 14 19 20  8 11 15 12 
 1  1  1  1  1  1  1  2  2  2  3 
> sort(table(data.xgb.row.row.aver$a3))

16 17 22 24 25 11 14 19 28 20 
 1  1  1  1  1  2  2  2  2  3 
> sort(table(data.xgb.row.row.aver$a4))

17 22 25 28 29 32 33 34 19 20 26 27 
 1  1  1  1  1  1  1  1  2  2  2  2 
> sort(table(data.xgb.row.row.aver$a5))

24 30 32 33 37 28 29 34 31 
 1  1  1  1  1  2  2  3  4 
> sort(table(data.xgb.row.row.aver$b1))

0 3 5 9 2 4 7 6 
1 1 1 1 2 3 3 4 
> sort(table(data.xgb.row.row.aver$b2))

11  6  7  8  9  5 
 1  2  2  3  3  5 
> 
> 
> data.xgb.clu.clu
[1]  3  7 14 21 29  6 10
> data.rdf.clu.clu
 1  1  1  1  1  1  1 
 4  8 16 21 31  5  9 
> data.xgb.row.clu
[1] 16 14 22 16 24  2  9
> data.xgb.clu.row
[1]  4 11 18 14 20  4  4
> data.xgb.row.row
[1] 10 16 16 17 25  3  5
> data.xgb.clu.cum
   a1 a2 a3 a4 a5 b1 b2
1   4  4 11 20 29  7  9
2   4  4 11 20 29  7  9
3   4  4 11 20 29  7  9
4   4  4 11 20 29  7  9
5   4  4 11 20 29  7  9
6   4  4 11 20 29  7  9
7   4  4 11 20 29  7  9
8   4  4 11 20 29  7  9
9   4  4 11 20 29  7  9
10  4  4 11 20 29  7  9
11  4  4 11 20 29  7  9
12  4  4 11 20 29  7  9
13  4  4 11 20 29  7  9
14  4  4 11 20 29  7  9
15  4  4 11 20 29  7  9
16  4  4 11 20 29  7  9
> data.xgb.row.cum
   a1 a2 a3 a4 a5 b1 b2
1  13  9 13 15 29  2  9
2  13  9 13 15 29  2  9
3  13  9 13 15 29  2  9
4  13  9 13 15 29  2  9
5  13  9 13 15 29  2  9
6  13  9 13 15 29  2  9
7  13  9 13 15 29  2  9
8  13  9 13 15 29  2  9
9  13  9 13 15 29  2  9
10 13  9 13 15 29  2  9
11 13  9 13 15 29  2  9
12 13  9 13 15 29  2  9
13 13  9 13 15 29  2  9
14 13  9 13 15 29  2  9
15 13  9 13 15 29  2  9
16 13  9 13 15 29  2  9
> 
> data.xgb.clu.clu.a<-sort(data.xgb.clu.clu[1:5])
> data.xgb.clu.clu.b<-sort(data.xgb.clu.clu[6:7])
> 
> data.rdf.clu.clu.a<-sort(as.numeric(data.rdf.clu.clu[1:5]))
> data.rdf.clu.clu.b<-sort(as.numeric(data.rdf.clu.clu[6:7]))
> 
> data.xgb.row.clu.a<-sort(data.xgb.row.clu[1:5])
> data.xgb.row.clu.b<-sort(data.xgb.row.clu[6:7])
> 
> data.xgb.clu.row.a<-sort(data.xgb.clu.row[1:5])
> data.xgb.clu.row.b<-sort(data.xgb.clu.row[6:7])
> 
> data.xgb.row.row.a<-sort(data.xgb.row.row[1:5])
> data.xgb.row.row.b<-sort(data.xgb.row.row[6:7])
> 
> r.a1<-c(data.xgb.clu.clu.a[1],data.rdf.clu.clu.a[1],data.xgb.row.clu.a[1],data.xgb.clu.row.a[1],
+         data.xgb.row.row.a[1],data.xgb.clu.cum$a1)
> r.a2<-c(data.xgb.clu.clu.a[2],data.rdf.clu.clu.a[2],data.xgb.row.clu.a[2],data.xgb.clu.row.a[2],
+         data.xgb.row.row.a[2],data.xgb.clu.cum$a2)
> r.a3<-c(data.xgb.clu.clu.a[3],data.rdf.clu.clu.a[3],data.xgb.row.clu.a[3],data.xgb.clu.row.a[3],
+         data.xgb.row.row.a[3],data.xgb.clu.cum$a3)
> r.a4<-c(data.xgb.clu.clu.a[4],data.rdf.clu.clu.a[4],data.xgb.row.clu.a[4],data.xgb.clu.row.a[4],
+         data.xgb.row.row.a[4],data.xgb.clu.cum$a4)
> r.a5<-c(data.xgb.clu.clu.a[5],data.rdf.clu.clu.a[5],data.xgb.row.clu.a[5],data.xgb.clu.row.a[5],
+         data.xgb.row.row.a[5],data.xgb.clu.cum$a5)
> r.b1<-c(data.xgb.clu.clu.b[1],data.rdf.clu.clu.b[1],data.xgb.row.clu.b[1],data.xgb.clu.row.b[1],
+         data.xgb.row.row.b[1],data.xgb.clu.cum$b1)
> r.b2<-c(data.xgb.clu.clu.b[2],data.rdf.clu.clu.b[2],data.xgb.row.clu.b[2],data.xgb.clu.row.b[2],
+         data.xgb.row.row.b[2],data.xgb.clu.cum$b2)
> 
> sort(table(r.a1))
r.a1
 3 10 14  4 
 1  1  1 18 
> sort(table(r.a2))
r.a2
 7  8 11 16  4 
 1  1  1  2 16 
> sort(table(r.a3))
r.a3
14 16 11 
 2  3 16 
> sort(table(r.a4))
r.a4
17 18 22 21 20 
 1  1  1  2 16 
> sort(table(r.a5))
r.a5
20 24 25 31 29 
 1  1  1  1 17 
> sort(table(r.b1))
r.b1
 2  3  4  5  6  7 
 1  1  1  1  1 16 
> sort(table(r.b2))
r.b2
 4  5 10  9 
 1  1  1 18 
> ########################################################################################################
> #train.sa<-head(dlt$sa,dim(dlt)[1]-1)
> #train.sb<-head(dlt$sb,dim(dlt)[1]-1)
> #result.sa<-tail(dlt$sa,dim(dlt)[1]-1)
> #result.sb<-tail(dlt$sb,dim(dlt)[1]-1)
> 
> #train
> sa.1<-dlt$sa[1:(dim(dlt)[1]-3)]
> sa.2<-dlt$sa[2:(dim(dlt)[1]-2)]
> sa.3<-dlt$sa[3:(dim(dlt)[1]-1)]
> result.sa<-dlt$sa[4:dim(dlt)[1]]
> trains.sa<-data.frame(sa.1,sa.2,sa.3,result.sa)
> trains.T.sa<-Matrix(as.matrix(trains.sa[,1:3]),sparse=T)
> bst.sa<-xgboost(data = trains.T.sa,label = trains.sa$result.sa,nrounds = 300,print_every_n = 300L)
[1]	train-rmse:65.789421 
[300]	train-rmse:0.137927 
> 
> 
> sb.1<-dlt$sb[1:(dim(dlt)[1]-3)]
> sb.2<-dlt$sb[2:(dim(dlt)[1]-2)]
> sb.3<-dlt$sb[3:(dim(dlt)[1]-1)]
> result.sb<-dlt$sb[4:dim(dlt)[1]]
> trains.sb<-data.frame(sb.1,sb.2,sb.3,result.sb)
> trains.T.sb<-Matrix(as.matrix(trains.sb[,1:3]),sparse=T)
> bst.sb<-xgboost(data = trains.T.sb,label = trains.sb$result.sb,nrounds = 300,print_every_n = 300L)
[1]	train-rmse:10.003672 
[300]	train-rmse:1.001406 
> 
> #predoct
> sa.1<-dlt$sa[2:(dim(dlt)[1]-2)]
> sa.2<-dlt$sa[3:(dim(dlt)[1]-1)]
> sa.3<-dlt$sa[4:dim(dlt)[1]]
> tests.sa<-data.frame(sa.1,sa.2,sa.3)
> tests.T.sa<-Matrix(as.matrix(tests.sa),sparse=T)
> testPredictions.sa <- predict(object = bst.sa,newdata = tests.T.sa)
> 
> sb.1<-dlt$sb[2:(dim(dlt)[1]-2)]
> sb.2<-dlt$sb[3:(dim(dlt)[1]-1)]
> sb.3<-dlt$sb[4:dim(dlt)[1]]
> tests.sb<-data.frame(sb.1,sb.2,sb.3)
> tests.T.sb<-Matrix(as.matrix(tests.sb),sparse=T)
> testPredictions.sb <- predict(object = bst.sb,newdata = tests.T.sb)
> 
> sa.pre<-round(testPredictions.sa)
> sb.pre<-round(testPredictions.sb)
> 
> c(tail(sa.pre,1),tail(sb.pre,1))
[1] 115  16
