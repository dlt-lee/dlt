> #clu:
> sort(table(data.xgb.clu$a1.clu))

2 3 7 1 6 8 5 4 
1 1 1 2 2 2 3 4 
> sort(table(data.xgb.clu$a2.clu))

 4  6  9 14 15 16 12 10 
 1  1  1  1  1  1  4  6 
> sort(table(data.xgb.clu$a3.clu))

 3 14 15 17 19 24 21 20 18 
 1  1  1  1  1  1  2  3  5 
> sort(table(data.xgb.clu$a4.clu))

20 25 29 21 23 24 19 22 
 1  1  1  2  2  2  3  4 
> sort(table(data.xgb.clu$a5.clu))

30 31 27 34 29 28 
 1  1  2  2  4  6 
> sort(table(data.xgb.clu$b1.clu))

6 1 5 3 4 
1 2 2 5 6 
> sort(table(data.xgb.clu$b2.clu))

 5  8  7  9 11 10 
 1  2  3  3  3  4 
> #row:
> sort(table(data.xgb.row$a1.row))

 3  6  7 11  8  4  5 
 1  1  1  1  2  3  7 
> sort(table(data.xgb.row$a2.row))

 8 14 12 10 11  9 
 1  1  2  3  4  5 
> sort(table(data.xgb.row$a3.row))

11 12 15 21 16 17 20 18 
 1  1  1  1  2  2  2  6 
> sort(table(data.xgb.row$a4.row))

15 18 19 20 21 24 17 23 16 25 
 1  1  1  1  1  1  2  2  3  3 
> sort(table(data.xgb.row$a5.row))

32 28 29 30 27 
 1  3  3  4  5 
> sort(table(data.xgb.row$b1.row))

7 3 5 6 4 
1 3 3 4 5 
> sort(table(data.xgb.row$b2.row))

 6 10  7  9  8 
 1  2  3  3  7 
> #clu.row:
> sort(table(data.xgb.clu.row.aver$a1))

 1  3  4  9 11 12 19  5  6  8 
 1  1  1  1  1  1  1  2  2  5 
> sort(table(data.xgb.clu.row.aver$a2))

 8 10 12 14 19 13 17 11 16 
 1  1  1  1  1  2  2  3  4 
> sort(table(data.xgb.clu.row.aver$a3))

 9 11 12 14 19 23 24 25 20 17 22 
 1  1  1  1  1  1  1  1  2  3  3 
> sort(table(data.xgb.clu.row.aver$a4))

16 18 22 23 31 20 26 27 24 
 1  1  1  1  1  2  2  3  4 
> sort(table(data.xgb.clu.row.aver$a5))

25 27 28 29 34 31 32 30 
 1  1  1  1  1  2  2  7 
> sort(table(data.xgb.clu.row.aver$b1))

6 3 5 4 
1 4 5 6 
> sort(table(data.xgb.clu.row.aver$b2))

 5  6 10 12  7 11  9  8 
 1  1  1  1  2  2  3  5 
> #row.row:
> sort(table(data.xgb.row.row.aver$a1))

 2  8 16  0  4  5  7  9  6 
 1  1  1  2  2  2  2  2  3 
> sort(table(data.xgb.row.row.aver$a2))

 3  6  8  9 10 12 14 16 17 20 15 13 
 1  1  1  1  1  1  1  1  1  1  2  4 
> sort(table(data.xgb.row.row.aver$a3))

10 11 23 14 16 19 20 21 
 1  1  1  2  2  3  3  3 
> sort(table(data.xgb.row.row.aver$a4))

14 15 16 20 27 31 19 23 25 24 
 1  1  1  1  1  1  2  2  2  4 
> sort(table(data.xgb.row.row.aver$a5))

24 30 32 34 35 25 26 29 31 28 
 1  1  1  1  1  2  2  2  2  3 
> sort(table(data.xgb.row.row.aver$b1))

3 2 6 7 4 5 
1 2 2 2 4 5 
> sort(table(data.xgb.row.row.aver$b2))

 6 11 12 13 14  7 10  8  9 
 1  1  1  1  1  2  2  3  4 
> 
> 
> data.xgb.clu.clu
[1]  5 13 22 30 32  4  7
> data.rdf.clu.clu
 1  1  1  1  1  1  1 
 5 13 20 25 31  4  7 
> data.xgb.row.clu
[1]  3 19 20 23 31  5  3
> data.xgb.clu.row
[1]  4 15 11 13 12  7  3
> data.xgb.row.row
[1]  7 22 12 19 19  3  3
> data.xgb.clu.cum
   a1 a2 a3 a4 a5 b1 b2
1   5 13 20 28 31  4  7
2   5 13 20 28 31  4  7
3   5 13 20 28 31  4  7
4   5 13 20 28 31  4  7
5   5 13 20 28 31  4  7
6   5 13 20 28 31  4  7
7   5 13 20 28 31  4  7
8   5 13 20 28 31  4  7
9   5 13 20 28 31  4  7
10  5 13 20 28 31  4  7
11  5 13 20 28 31  4  7
12  5 13 20 28 31  4  7
13  5 13 20 28 31  4  7
14  5 13 20 28 31  4  7
15  5 13 20 28 31  4  7
16  5 13 20 28 31  4  7
> data.xgb.row.cum
   a1 a2 a3 a4 a5 b1 b2
1   6 12 22 27 31  6  4
2   6 12 22 27 31  6  4
3   6 12 22 27 31  6  4
4   6 12 22 27 31  6  4
5   6 12 22 27 31  6  4
6   6 12 22 27 31  6  4
7   6 12 22 27 31  6  4
8   6 12 22 27 31  6  4
9   6 12 22 27 31  6  4
10  6 12 22 27 31  6  4
11  6 12 22 27 31  6  4
12  6 12 22 27 31  6  4
13  6 12 22 27 31  6  4
14  6 12 22 27 31  6  4
15  6 12 22 27 31  6  4
16  6 12 22 27 31  6  4
> 
> data.xgb.clu.clu.a<-sort(data.xgb.clu.clu[1:5])
> data.xgb.clu.clu.b<-sort(data.xgb.clu.clu[6:7])
> 
> data.rdf.clu.clu.a<-sort(as.numeric(data.rdf.clu.clu[1:5]))
> data.rdf.clu.clu.b<-sort(as.numeric(data.rdf.clu.clu[6:7]))
> 
> data.xgb.row.clu.a<-sort(data.xgb.row.clu[1:5])
> data.xgb.row.clu.b<-sort(data.xgb.row.clu[6:7])
> 
> data.xgb.clu.row.a<-sort(data.xgb.clu.row[1:5])
> data.xgb.clu.row.b<-sort(data.xgb.clu.row[6:7])
> 
> data.xgb.row.row.a<-sort(data.xgb.row.row[1:5])
> data.xgb.row.row.b<-sort(data.xgb.row.row[6:7])
> 
> r.a1<-c(data.xgb.clu.clu.a[1],data.rdf.clu.clu.a[1],data.xgb.row.clu.a[1],data.xgb.clu.row.a[1],
+         data.xgb.row.row.a[1],data.xgb.clu.cum$a1)
> r.a2<-c(data.xgb.clu.clu.a[2],data.rdf.clu.clu.a[2],data.xgb.row.clu.a[2],data.xgb.clu.row.a[2],
+         data.xgb.row.row.a[2],data.xgb.clu.cum$a2)
> r.a3<-c(data.xgb.clu.clu.a[3],data.rdf.clu.clu.a[3],data.xgb.row.clu.a[3],data.xgb.clu.row.a[3],
+         data.xgb.row.row.a[3],data.xgb.clu.cum$a3)
> r.a4<-c(data.xgb.clu.clu.a[4],data.rdf.clu.clu.a[4],data.xgb.row.clu.a[4],data.xgb.clu.row.a[4],
+         data.xgb.row.row.a[4],data.xgb.clu.cum$a4)
> r.a5<-c(data.xgb.clu.clu.a[5],data.rdf.clu.clu.a[5],data.xgb.row.clu.a[5],data.xgb.clu.row.a[5],
+         data.xgb.row.row.a[5],data.xgb.clu.cum$a5)
> r.b1<-c(data.xgb.clu.clu.b[1],data.rdf.clu.clu.b[1],data.xgb.row.clu.b[1],data.xgb.clu.row.b[1],
+         data.xgb.row.row.b[1],data.xgb.clu.cum$b1)
> r.b2<-c(data.xgb.clu.clu.b[2],data.rdf.clu.clu.b[2],data.xgb.row.clu.b[2],data.xgb.clu.row.b[2],
+         data.xgb.row.row.b[2],data.xgb.clu.cum$b2)
> 
> sort(table(r.a1))
r.a1
 3  4  7  5 
 1  1  1 18 
> sort(table(r.a2))
r.a2
11 12 19 13 
 1  1  1 18 
> sort(table(r.a3))
r.a3
12 19 22 20 
 1  1  1 18 
> sort(table(r.a4))
r.a4
13 19 23 25 30 28 
 1  1  1  1  1 16 
> sort(table(r.a5))
r.a5
15 22 32 31 
 1  1  1 18 
> sort(table(r.b1))
r.b1
 3  4 
 3 18 
> sort(table(r.b2))
r.b2
 3  5  7 
 1  1 19 
> ########################################################################################################
> #train.sa<-head(dlt$sa,dim(dlt)[1]-1)
> #train.sb<-head(dlt$sb,dim(dlt)[1]-1)
> #result.sa<-tail(dlt$sa,dim(dlt)[1]-1)
> #result.sb<-tail(dlt$sb,dim(dlt)[1]-1)
> 
> #train
> sa.1<-dlt$sa[1:(dim(dlt)[1]-3)]
> sa.2<-dlt$sa[2:(dim(dlt)[1]-2)]
> sa.3<-dlt$sa[3:(dim(dlt)[1]-1)]
> result.sa<-dlt$sa[4:dim(dlt)[1]]
> trains.sa<-data.frame(sa.1,sa.2,sa.3,result.sa)
> trains.T.sa<-Matrix(as.matrix(trains.sa[,1:3]),sparse=T)
> bst.sa<-xgboost(data = trains.T.sa,label = trains.sa$result.sa,nrounds = 300,print_every_n = 300L)
[1]	train-rmse:65.796074 
[300]	train-rmse:0.106078 
> 
> 
> sb.1<-dlt$sb[1:(dim(dlt)[1]-3)]
> sb.2<-dlt$sb[2:(dim(dlt)[1]-2)]
> sb.3<-dlt$sb[3:(dim(dlt)[1]-1)]
> result.sb<-dlt$sb[4:dim(dlt)[1]]
> trains.sb<-data.frame(sb.1,sb.2,sb.3,result.sb)
> trains.T.sb<-Matrix(as.matrix(trains.sb[,1:3]),sparse=T)
> bst.sb<-xgboost(data = trains.T.sb,label = trains.sb$result.sb,nrounds = 300,print_every_n = 300L)
[1]	train-rmse:10.004042 
[300]	train-rmse:1.003079 
> 
> #predoct
> sa.1<-dlt$sa[2:(dim(dlt)[1]-2)]
> sa.2<-dlt$sa[3:(dim(dlt)[1]-1)]
> sa.3<-dlt$sa[4:dim(dlt)[1]]
> tests.sa<-data.frame(sa.1,sa.2,sa.3)
> tests.T.sa<-Matrix(as.matrix(tests.sa),sparse=T)
> testPredictions.sa <- predict(object = bst.sa,newdata = tests.T.sa)
> 
> sb.1<-dlt$sb[2:(dim(dlt)[1]-2)]
> sb.2<-dlt$sb[3:(dim(dlt)[1]-1)]
> sb.3<-dlt$sb[4:dim(dlt)[1]]
> tests.sb<-data.frame(sb.1,sb.2,sb.3)
> tests.T.sb<-Matrix(as.matrix(tests.sb),sparse=T)
> testPredictions.sb <- predict(object = bst.sb,newdata = tests.T.sb)
> 
> sa.pre<-round(testPredictions.sa)
> sb.pre<-round(testPredictions.sb)
> 
> c(tail(sa.pre,1),tail(sb.pre,1))
[1] 96 12
> 