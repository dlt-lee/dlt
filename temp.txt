> #clu:
> sort(table(data.xgb.clu$a1.clu))

 0  3  8 10  4  6  5 
 1  1  1  1  3  4  5 
> sort(table(data.xgb.clu$a2.clu))

 7 12 13  8 10 11 14 15  9 
 1  1  1  2  2  2  2  2  3 
> sort(table(data.xgb.clu$a3.clu))

18 19 21 17 20 15 16 
 1  1  1  2  2  3  6 
> sort(table(data.xgb.clu$a4.clu))

22 23 28 30 31 33 27 34 25 29 
 1  1  1  1  1  1  2  2  3  3 
> sort(table(data.xgb.clu$a5.clu))

26 27 29 32 33 28 31 30 
 1  1  1  1  1  2  4  5 
> sort(table(data.xgb.clu$b1.clu))

6 7 4 5 2 3 
1 1 3 3 4 4 
> sort(table(data.xgb.clu$b2.clu))

5 7 6 8 9 
1 2 3 5 5 
> #row:
> sort(table(data.xgb.row$a1.row))

2 3 7 8 4 5 6 
1 1 1 2 3 4 4 
> sort(table(data.xgb.row$a2.row))

12 15 10  9  8 11 
 1  1  2  3  4  5 
> sort(table(data.xgb.row$a3.row))

12 13 14 15 20 21 16 17 18 19 
 1  1  1  1  1  1  2  2  2  4 
> sort(table(data.xgb.row$a4.row))

20 21 22 27 24 25 29 26 28 
 1  1  1  1  2  2  2  3  3 
> sort(table(data.xgb.row$a5.row))

26 29 34 33 32 31 
 1  1  1  2  5  6 
> sort(table(data.xgb.row$b1.row))

8 9 3 4 5 6 
1 1 2 2 3 7 
> sort(table(data.xgb.row$b2.row))

 6 10  7  8  9 
 1  1  3  5  6 
> #clu.row:
> sort(table(data.xgb.clu.row.aver$a1))

 4  5  7 11 12  2  3  6  9 
 1  1  1  1  1  2  3  3  3 
> sort(table(data.xgb.clu.row.aver$a2))

 5 10 11 20  9 12 13 14 15 16 
 1  1  1  1  2  2  2  2  2  2 
> sort(table(data.xgb.clu.row.aver$a3))

13 14 15 18 22 25 26 17 19 20 
 1  1  1  1  1  1  1  2  2  5 
> sort(table(data.xgb.clu.row.aver$a4))

20 23 27 30 31 32 21 22 24 25 
 1  1  1  1  1  1  2  2  3  3 
> sort(table(data.xgb.clu.row.aver$a5))

26 28 34 35 36 27 31 32 30 
 1  1  1  1  1  2  2  3  4 
> sort(table(data.xgb.clu.row.aver$b1))

1 6 3 4 5 
1 2 3 4 6 
> sort(table(data.xgb.clu.row.aver$b2))

 6 11  7  9  8 
 1  1  3  4  7 
> #row.row:
> sort(table(data.xgb.row.row.aver$a1))

 0  2  8 10  1  5  7  3  4 
 1  1  1  1  2  2  2  3  3 
> sort(table(data.xgb.row.row.aver$a2))

 3  4  5 14 19  6  8  9 12 10 
 1  1  1  1  1  2  2  2  2  3 
> sort(table(data.xgb.row.row.aver$a3))

 4  8 18 24  9 11 13 14 15 19 
 1  1  1  1  2  2  2  2  2  2 
> sort(table(data.xgb.row.row.aver$a4))

12 13 17 19 22 23 29 30 20 21 24 26 
 1  1  1  1  1  1  1  1  2  2  2  2 
> sort(table(data.xgb.row.row.aver$a5))

21 22 23 27 33 26 28 29 34 30 
 1  1  1  1  1  2  2  2  2  3 
> sort(table(data.xgb.row.row.aver$b1))

4 9 6 8 5 7 3 
1 1 2 2 3 3 4 
> sort(table(data.xgb.row.row.aver$b2))

 5  6  8 12 11  7  9 10 
 1  1  1  1  2  3  3  4 
> 
> 
> data.xgb.clu.clu
[1]  3 15 18 21 26  5 11
> data.rdf.clu.clu
 1  1  1  1  1  1  1 
 5 13 18 22 29  5  9 
> data.xgb.row.clu
[1]  3 11 12 26 27  4  9
> data.xgb.clu.row
[1] 14  9 15 13 13  4  7
> data.xgb.row.row
[1]  5 12 14 13 17  4  3
> data.xgb.clu.cum
   a1 a2 a3 a4 a5 b1 b2
1   5 10 19 19 29  5 11
2   5 10 19 19 29  5 11
3   5 10 19 19 29  5 11
4   5 10 19 19 29  5 11
5   5 10 19 19 29  5 11
6   5 10 19 19 29  5 11
7   5 10 19 19 29  5 11
8   5 10 19 19 29  5 11
9   5 10 19 19 29  5 11
10  5 10 19 19 29  5 11
11  5 10 19 19 29  5 11
12  5 10 19 19 29  5 11
13  5 10 19 19 29  5 11
14  5 10 19 19 29  5 11
15  5 10 19 19 29  5 11
16  5 10 19 19 29  5 11
> data.xgb.row.cum
   a1 a2 a3 a4 a5 b1 b2
1   2  7 14 27 31  6  6
2   2  7 14 27 31  6  6
3   2  7 14 27 31  6  6
4   2  7 14 27 31  6  6
5   2  7 14 27 31  6  6
6   2  7 14 27 31  6  6
7   2  7 14 27 31  6  6
8   2  7 14 27 31  6  6
9   2  7 14 27 31  6  6
10  2  7 14 27 31  6  6
11  2  7 14 27 31  6  6
12  2  7 14 27 31  6  6
13  2  7 14 27 31  6  6
14  2  7 14 27 31  6  6
15  2  7 14 27 31  6  6
16  2  7 14 27 31  6  6
> 
> data.xgb.clu.clu.a<-sort(data.xgb.clu.clu[1:5])
> data.xgb.clu.clu.b<-sort(data.xgb.clu.clu[6:7])
> 
> data.rdf.clu.clu.a<-sort(as.numeric(data.rdf.clu.clu[1:5]))
> data.rdf.clu.clu.b<-sort(as.numeric(data.rdf.clu.clu[6:7]))
> 
> data.xgb.row.clu.a<-sort(data.xgb.row.clu[1:5])
> data.xgb.row.clu.b<-sort(data.xgb.row.clu[6:7])
> 
> data.xgb.clu.row.a<-sort(data.xgb.clu.row[1:5])
> data.xgb.clu.row.b<-sort(data.xgb.clu.row[6:7])
> 
> data.xgb.row.row.a<-sort(data.xgb.row.row[1:5])
> data.xgb.row.row.b<-sort(data.xgb.row.row[6:7])
> 
> r.a1<-c(data.xgb.clu.clu.a[1],data.rdf.clu.clu.a[1],data.xgb.row.clu.a[1],data.xgb.clu.row.a[1],
+         data.xgb.row.row.a[1],data.xgb.clu.cum$a1,data.xgb.row.cum$a1)
> r.a2<-c(data.xgb.clu.clu.a[2],data.rdf.clu.clu.a[2],data.xgb.row.clu.a[2],data.xgb.clu.row.a[2],
+         data.xgb.row.row.a[2],data.xgb.clu.cum$a2,data.xgb.row.cum$a2)
> r.a3<-c(data.xgb.clu.clu.a[3],data.rdf.clu.clu.a[3],data.xgb.row.clu.a[3],data.xgb.clu.row.a[3],
+         data.xgb.row.row.a[3],data.xgb.clu.cum$a3,data.xgb.row.cum$a3)
> r.a4<-c(data.xgb.clu.clu.a[4],data.rdf.clu.clu.a[4],data.xgb.row.clu.a[4],data.xgb.clu.row.a[4],
+         data.xgb.row.row.a[4],data.xgb.clu.cum$a4,data.xgb.row.cum$a4)
> r.a5<-c(data.xgb.clu.clu.a[5],data.rdf.clu.clu.a[5],data.xgb.row.clu.a[5],data.xgb.clu.row.a[5],
+         data.xgb.row.row.a[5],data.xgb.clu.cum$a5,data.xgb.row.cum$a5)
> r.b1<-c(data.xgb.clu.clu.b[1],data.rdf.clu.clu.b[1],data.xgb.row.clu.b[1],data.xgb.clu.row.b[1],
+         data.xgb.row.row.b[1],data.xgb.clu.cum$b1,data.xgb.row.cum$b1)
> r.b2<-c(data.xgb.clu.clu.b[2],data.rdf.clu.clu.b[2],data.xgb.row.clu.b[2],data.xgb.clu.row.b[2],
+         data.xgb.row.row.b[2],data.xgb.clu.cum$b2,data.xgb.row.cum$b2)
> 
> sort(table(r.a1))
r.a1
 9  3  2  5 
 1  2 16 18 
> sort(table(r.a2))
r.a2
11 12 15 13  7 10 
 1  1  1  2 16 16 
> sort(table(r.a3))
r.a3
12 13 18 14 19 
 1  2  2 16 16 
> sort(table(r.a4))
r.a4
21 22 26 14 19 27 
 1  1  1  2 16 16 
> sort(table(r.a5))
r.a5
15 17 26 27 31 29 
 1  1  1  1 16 17 
> sort(table(r.b1))
r.b1
 3  4  6  5 
 1  2 16 18 
> sort(table(r.b2))
r.b2
 4  7  9  6 11 
 1  1  2 16 17 
> ########################################################################################################
> #train.sa<-head(dlt$sa,dim(dlt)[1]-1)
> #train.sb<-head(dlt$sb,dim(dlt)[1]-1)
> #result.sa<-tail(dlt$sa,dim(dlt)[1]-1)
> #result.sb<-tail(dlt$sb,dim(dlt)[1]-1)
> 
> #train
> sa.1<-dlt$sa[1:(dim(dlt)[1]-3)]
> sa.2<-dlt$sa[2:(dim(dlt)[1]-2)]
> sa.3<-dlt$sa[3:(dim(dlt)[1]-1)]
> result.sa<-dlt$sa[4:dim(dlt)[1]]
> trains.sa<-data.frame(sa.1,sa.2,sa.3,result.sa)
> trains.T.sa<-Matrix(as.matrix(trains.sa[,1:3]),sparse=T)
> bst.sa<-xgboost(data = trains.T.sa,label = trains.sa$result.sa,nrounds = 300,print_every_n = 300L)
[1]	train-rmse:65.614799 
[300]	train-rmse:0.113000 
> 
> 
> sb.1<-dlt$sb[1:(dim(dlt)[1]-3)]
> sb.2<-dlt$sb[2:(dim(dlt)[1]-2)]
> sb.3<-dlt$sb[3:(dim(dlt)[1]-1)]
> result.sb<-dlt$sb[4:dim(dlt)[1]]
> trains.sb<-data.frame(sb.1,sb.2,sb.3,result.sb)
> trains.T.sb<-Matrix(as.matrix(trains.sb[,1:3]),sparse=T)
> bst.sb<-xgboost(data = trains.T.sb,label = trains.sb$result.sb,nrounds = 300,print_every_n = 300L)
[1]	train-rmse:10.030340 
[300]	train-rmse:1.024144 
> 
> #predoct
> sa.1<-dlt$sa[2:(dim(dlt)[1]-2)]
> sa.2<-dlt$sa[3:(dim(dlt)[1]-1)]
> sa.3<-dlt$sa[4:dim(dlt)[1]]
> tests.sa<-data.frame(sa.1,sa.2,sa.3)
> tests.T.sa<-Matrix(as.matrix(tests.sa),sparse=T)
> testPredictions.sa <- predict(object = bst.sa,newdata = tests.T.sa)
> 
> sb.1<-dlt$sb[2:(dim(dlt)[1]-2)]
> sb.2<-dlt$sb[3:(dim(dlt)[1]-1)]
> sb.3<-dlt$sb[4:dim(dlt)[1]]
> tests.sb<-data.frame(sb.1,sb.2,sb.3)
> tests.T.sb<-Matrix(as.matrix(tests.sb),sparse=T)
> testPredictions.sb <- predict(object = bst.sb,newdata = tests.T.sb)
> 
> sa.pre<-round(testPredictions.sa)
> sb.pre<-round(testPredictions.sb)
> 
> c(tail(sa.pre,1),tail(sb.pre,1))
[1] 110  15


[1]  7 15 25 35 32  9  6
