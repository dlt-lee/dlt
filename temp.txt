> #clu:
> sort(table(data.xgb.clu$a1.clu))

 0  3  8 12 13  6  7  9 
 1  1  1  1  1  3  4  4 
> sort(table(data.xgb.clu$a2.clu))

 6  8  9 11 12 16 14 17 10 13 
 1  1  1  1  1  1  2  2  3  3 
> sort(table(data.xgb.clu$a3.clu))

 7  8  9 11 12 13 20 14 15 16 17 
 1  1  1  1  1  1  1  2  2  2  3 
> sort(table(data.xgb.clu$a4.clu))

10 11 14 16 26 28 15 18 17 23 
 1  1  1  1  1  1  2  2  3  3 
> sort(table(data.xgb.clu$a5.clu))

25 28 30 29 31 32 
 1  2  2  3  4  4 
> sort(table(data.xgb.clu$b1.clu))

2 4 5 1 6 7 3 
1 1 1 3 3 3 4 
> sort(table(data.xgb.clu$b2.clu))

 3  4  7  6  9  5  8 10 
 1  1  1  2  2  3  3  3 
> #row:
> sort(table(data.xgb.row$a1.row))

8 4 5 7 6 
2 3 3 3 5 
> sort(table(data.xgb.row$a2.row))

11 13 14 15  9 12  8 10 
 1  1  1  1  2  2  3  5 
> sort(table(data.xgb.row$a3.row))

14 18 20 21 23 24 17 19 22 15 
 1  1  1  1  1  1  2  2  2  4 
> sort(table(data.xgb.row$a4.row))

20 23 22 24 25 
 2  2  4  4  4 
> sort(table(data.xgb.row$a5.row))

29 34 30 33 31 32 
 1  1  2  2  5  5 
> sort(table(data.xgb.row$b1.row))

8 7 5 6 4 
1 2 3 3 7 
> sort(table(data.xgb.row$b2.row))

4 5 6 7 9 8 
1 1 1 3 4 6 
> #clu.row:
> sort(table(data.xgb.clu.row.aver$a1))

 1  7 14 15  8  9 11  4  6 
 1  1  1  1  2  2  2  3  3 
> sort(table(data.xgb.clu.row.aver$a2))

 4  7 14 19 21 23  9 12 16 18 
 1  1  1  1  1  1  2  2  2  4 
> sort(table(data.xgb.clu.row.aver$a3))

10 12 13 14 16 20 23 25 18 22 24 
 1  1  1  1  1  1  1  1  2  3  3 
> sort(table(data.xgb.clu.row.aver$a4))

20 23 24 26 27 29 33 34 28 16 25 
 1  1  1  1  1  1  1  1  2  3  3 
> sort(table(data.xgb.clu.row.aver$a5))

19 21 23 29 30 31 33 34 26 27 32 
 1  1  1  1  1  1  1  1  2  2  4 
> sort(table(data.xgb.clu.row.aver$b1))

8 5 1 2 3 4 
1 2 3 3 3 4 
> sort(table(data.xgb.clu.row.aver$b2))

10 11  6  7  8  9 
 1  1  3  3  3  5 
> #row.row:
> sort(table(data.xgb.row.row.aver$a1))

 3  6 11 14  4  7  5 
 1  1  1  1  2  3  7 
> sort(table(data.xgb.row.row.aver$a2))

 5  6  9 10 14 15 18 19 25 11 16 13 
 1  1  1  1  1  1  1  1  1  2  2  3 
> sort(table(data.xgb.row.row.aver$a3))

13 14 15 21 22 30 10 20 18 19 
 1  1  1  1  1  1  2  2  3  3 
> sort(table(data.xgb.row.row.aver$a4))

18 26 27 31 20 23 24 22 25 
 1  1  1  1  2  2  2  3  3 
> sort(table(data.xgb.row.row.aver$a5))

24 25 26 28 30 33 35 36 27 29 31 
 1  1  1  1  1  1  1  1  2  3  3 
> sort(table(data.xgb.row.row.aver$b1))

1 9 2 5 3 4 
1 1 2 3 4 5 
> sort(table(data.xgb.row.row.aver$b2))

10 11  4  9  7  8 
 1  1  2  2  4  6 
> 
> 
> data.xgb.clu.clu
[1]  2 16 17 15 30  3  6
> data.rdf.clu.clu
 1  1  1  1  1  1  1 
 4 13 15 22 30  5  7 
> data.xgb.row.clu
[1]  6 18 15 20 31  3  9
> data.xgb.clu.row
[1]  4 14 11 12 18  8  6
> data.xgb.row.row
[1] 14 16 17 25 21  6  6
> data.xgb.clu.cum
   a1 a2 a3 a4 a5 b1 b2
1   2 12 10 25 31  2  5
2   2 11 11 25 31  2  5
3   2 12 12 25 31  2  5
4   2 11 11 25 31  2  5
5   2 12 11 25 31  2  5
6   2 12 10 25 31  2  5
7   2 12 10 25 31  2  5
8   2 12 10 25 31  2  5
9   2 12 12 25 31  2  5
10  2 12 10 25 31  2  5
11  2 12 11 25 31  2  5
12  2 12 12 25 31  2  5
13  2 11 11 24 31  2  5
14  2 11 12 24 31  2  5
15  2 11 12 25 31  2  5
16  2 12 11 25 31  2  5
> data.xgb.row.cum
   a1 a2 a3 a4 a5 b1 b2
1   9 19 20 20 28  2 10
2   9 19 20 20 28  2 10
3   9 19 20 20 28  2 10
4   9 19 20 20 28  2 10
5   9 19 20 20 28  2 10
6   9 19 20 20 28  2 10
7   9 19 20 20 28  2 10
8   9 18 20 20 28  2 10
9   9 18 20 20 28  2 10
10  9 19 20 20 28  2 10
11  9 19 20 20 28  2 10
12  9 19 20 20 28  2 10
13  9 19 20 20 28  2 10
14  9 19 20 20 28  2 10
15  9 19 20 20 28  2 10
16  9 19 20 20 28  2 10
> 
> ########################################################################################################
> #train.sa<-head(dlt$sa,dim(dlt)[1]-1)
> #train.sb<-head(dlt$sb,dim(dlt)[1]-1)
> #result.sa<-tail(dlt$sa,dim(dlt)[1]-1)
> #result.sb<-tail(dlt$sb,dim(dlt)[1]-1)
> 
> #train
> sa.1<-dlt$sa[1:(dim(dlt)[1]-3)]
> sa.2<-dlt$sa[2:(dim(dlt)[1]-2)]
> sa.3<-dlt$sa[3:(dim(dlt)[1]-1)]
> result.sa<-dlt$sa[4:dim(dlt)[1]]
> trains.sa<-data.frame(sa.1,sa.2,sa.3,result.sa)
> trains.T.sa<-Matrix(as.matrix(trains.sa[,1:3]),sparse=T)
> bst.sa<-xgboost(data = trains.T.sa,label = trains.sa$result.sa,nrounds = 300,print_every_n = 300L)
[1]	train-rmse:65.914436 
[300]	train-rmse:0.087611 
> 
> 
> sb.1<-dlt$sb[1:(dim(dlt)[1]-3)]
> sb.2<-dlt$sb[2:(dim(dlt)[1]-2)]
> sb.3<-dlt$sb[3:(dim(dlt)[1]-1)]
> result.sb<-dlt$sb[4:dim(dlt)[1]]
> trains.sb<-data.frame(sb.1,sb.2,sb.3,result.sb)
> trains.T.sb<-Matrix(as.matrix(trains.sb[,1:3]),sparse=T)
> bst.sb<-xgboost(data = trains.T.sb,label = trains.sb$result.sb,nrounds = 300,print_every_n = 300L)
[1]	train-rmse:9.959823 
[300]	train-rmse:0.964848 
> 
> #predoct
> sa.1<-dlt$sa[2:(dim(dlt)[1]-2)]
> sa.2<-dlt$sa[3:(dim(dlt)[1]-1)]
> sa.3<-dlt$sa[4:dim(dlt)[1]]
> tests.sa<-data.frame(sa.1,sa.2,sa.3)
> tests.T.sa<-Matrix(as.matrix(tests.sa),sparse=T)
> testPredictions.sa <- predict(object = bst.sa,newdata = tests.T.sa)
> 
> sb.1<-dlt$sb[2:(dim(dlt)[1]-2)]
> sb.2<-dlt$sb[3:(dim(dlt)[1]-1)]
> sb.3<-dlt$sb[4:dim(dlt)[1]]
> tests.sb<-data.frame(sb.1,sb.2,sb.3)
> tests.T.sb<-Matrix(as.matrix(tests.sb),sparse=T)
> testPredictions.sb <- predict(object = bst.sb,newdata = tests.T.sb)
> 
> sa.pre<-round(testPredictions.sa)
> sb.pre<-round(testPredictions.sb)
> 
> c(tail(sa.pre,1),tail(sb.pre,1))
[1] 97 14
> 