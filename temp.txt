> #clu:
> sort(table(data.xgb.clu$a1.clu))

 2  3  8  9 15  4  6  5 
 1  1  1  1  1  3  3  5 
> sort(table(data.xgb.clu$a2.clu))

 7 11 13 14 15 16 20 21  8 10 12 
 1  1  1  1  1  1  1  1  2  2  4 
> sort(table(data.xgb.clu$a3.clu))

13 14 15 16 17 19 24 25 21 20 22 
 1  1  1  1  1  1  1  1  2  3  3 
> sort(table(data.xgb.clu$a4.clu))

26 27 31 33 34 25 28 29 32 24 
 1  1  1  1  1  2  2  2  2  3 
> sort(table(data.xgb.clu$a5.clu))

25 28 30 32 33 31 
 1  1  2  3  4  5 
> sort(table(data.xgb.clu$b1.clu))

2 3 7 4 6 5 
1 1 1 3 3 7 
> sort(table(data.xgb.clu$b2.clu))

 6  7 11 10  8  9 
 1  1  1  3  4  6 
> #row:
> sort(table(data.xgb.row$a1.row))

 4  6  9 11 13  8  5  7 
 1  1  1  1  1  2  4  5 
> sort(table(data.xgb.row$a2.row))

11 13  7  8  9 12 10 14 
 1  1  2  2  2  2  3  3 
> sort(table(data.xgb.row$a3.row))

18 24 16 21 17 19 20 
 1  1  2  2  3  3  4 
> sort(table(data.xgb.row$a4.row))

22 26 23 24 25 27 28 29 30 
 1  1  2  2  2  2  2  2  2 
> sort(table(data.xgb.row$a5.row))

34 33 30 31 32 
 1  3  4  4  4 
> sort(table(data.xgb.row$b1.row))

4 8 5 6 7 
1 2 3 5 5 
> sort(table(data.xgb.row$b2.row))

 5  8  9  7 10 
 1  2  3  4  6 
> #clu.row:
> sort(table(data.xgb.clu.row.aver$a1))

 2  4  7 13  9 10 11  5  6 
 1  1  1  1  2  2  2  3  3 
> sort(table(data.xgb.clu.row.aver$a2))

 5  7 10 11 12 13 14 15 17 18 21 25  9 16 
 1  1  1  1  1  1  1  1  1  1  1  1  2  2 
> sort(table(data.xgb.clu.row.aver$a3))

15 19 23 24 30 22 25 21 20 
 1  1  1  1  1  2  2  3  4 
> sort(table(data.xgb.clu.row.aver$a4))

20 23 26 27 29 31 33 21 28 30 24 
 1  1  1  1  1  1  1  2  2  2  3 
> sort(table(data.xgb.clu.row.aver$a5))

24 28 33 29 35 31 32 34 
 1  1  1  2  2  3  3  3 
> sort(table(data.xgb.clu.row.aver$b1))

1 2 7 8 6 3 4 5 
1 1 1 1 2 3 3 4 
> sort(table(data.xgb.clu.row.aver$b2))

 6 11  5  7  8  9 
 1  1  2  2  4  6 
> #row.row:
> sort(table(data.xgb.row.row.aver$a1))

 3  4  5  8 10 14 11  6  9 
 1  1  1  1  1  1  2  4  4 
> sort(table(data.xgb.row.row.aver$a2))

 5  7  8 12 14 17 18 19 10 11 13 15 
 1  1  1  1  1  1  1  1  2  2  2  2 
> sort(table(data.xgb.row.row.aver$a3))

13 14 15 16 17 22 23 25 28 21 27 20 
 1  1  1  1  1  1  1  1  1  2  2  3 
> sort(table(data.xgb.row.row.aver$a4))

19 21 28 30 31 32 33 22 26 29 
 1  1  1  1  1  1  1  3  3  3 
> sort(table(data.xgb.row.row.aver$a5))

27 29 30 32 33 34 35 36 38 26 31 
 1  1  1  1  1  1  1  1  1  2  5 
> sort(table(data.xgb.row.row.aver$b1))

2 3 8 1 4 7 6 5 
1 1 1 2 2 2 3 4 
> sort(table(data.xgb.row.row.aver$b2))

 4  6  8 12  7 10  9 
 1  1  1  1  3  4  5 
> 
> 
> data.xgb.clu.clu
[1]  6  7 18 27 29  4 10
> data.rdf.clu.clu
 1  1  1  1  1  1  1 
 6 10 20 27 29  4  9 
> data.xgb.row.clu
[1]  6 13 21 27 35  9 10
> data.xgb.clu.row
[1]  8 18 16 14 13  6  4
> data.xgb.row.row
[1] 12 11 11 13 21  4  6
> data.xgb.clu.cum
   a1 a2 a3 a4 a5 b1 b2
1   7  7 20 26 29  7 10
2   7  7 20 26 29  7 10
3   7  7 20 26 29  7 10
4   7  7 20 26 29  7 10
5   7  7 20 26 29  7 10
6   7  7 20 26 29  7 10
7   7  7 20 26 29  7 10
8   7  7 20 26 29  7 10
9   7  7 20 26 29  7 10
10  7  7 20 26 29  7 10
11  7  7 20 26 29  7 10
12  7  7 20 26 29  7 10
13  7  7 20 26 29  7 10
14  7  7 20 26 29  7 10
15  7  7 20 26 29  7 10
16  7  7 20 26 29  7 10
> data.xgb.row.cum
   a1 a2 a3 a4 a5 b1 b2
1   6 16 25 22 35  9  7
2   6 16 25 22 35  9  7
3   6 16 25 22 35  9  7
4   6 16 25 22 35  9  7
5   6 16 25 22 35  9  7
6   6 16 25 22 35  9  7
7   6 16 25 22 35  9  7
8   6 16 25 22 35  9  7
9   6 16 25 22 35  9  7
10  6 16 25 22 35  9  7
11  6 16 25 22 35  9  7
12  6 16 25 22 35  9  7
13  6 16 25 22 35  9  7
14  6 16 25 22 35  9  7
15  6 16 25 22 35  9  7
16  6 16 25 22 35  9  7
> 
> ########################################################################################################
> #train.sa<-head(dlt$sa,dim(dlt)[1]-1)
> #train.sb<-head(dlt$sb,dim(dlt)[1]-1)
> #result.sa<-tail(dlt$sa,dim(dlt)[1]-1)
> #result.sb<-tail(dlt$sb,dim(dlt)[1]-1)
> 
> #train
> sa.1<-dlt$sa[1:(dim(dlt)[1]-3)]
> sa.2<-dlt$sa[2:(dim(dlt)[1]-2)]
> sa.3<-dlt$sa[3:(dim(dlt)[1]-1)]
> result.sa<-dlt$sa[4:dim(dlt)[1]]
> trains.sa<-data.frame(sa.1,sa.2,sa.3,result.sa)
> trains.T.sa<-Matrix(as.matrix(trains.sa[,1:3]),sparse=T)
> bst.sa<-xgboost(data = trains.T.sa,label = trains.sa$result.sa,nrounds = 300,print_every_n = 300L)
[1]	train-rmse:65.954468 
[300]	train-rmse:0.122162 
> 
> 
> sb.1<-dlt$sb[1:(dim(dlt)[1]-3)]
> sb.2<-dlt$sb[2:(dim(dlt)[1]-2)]
> sb.3<-dlt$sb[3:(dim(dlt)[1]-1)]
> result.sb<-dlt$sb[4:dim(dlt)[1]]
> trains.sb<-data.frame(sb.1,sb.2,sb.3,result.sb)
> trains.T.sb<-Matrix(as.matrix(trains.sb[,1:3]),sparse=T)
> bst.sb<-xgboost(data = trains.T.sb,label = trains.sb$result.sb,nrounds = 300,print_every_n = 300L)
[1]	train-rmse:9.955993 
[300]	train-rmse:0.964917 
> 
> #predoct
> sa.1<-dlt$sa[2:(dim(dlt)[1]-2)]
> sa.2<-dlt$sa[3:(dim(dlt)[1]-1)]
> sa.3<-dlt$sa[4:dim(dlt)[1]]
> tests.sa<-data.frame(sa.1,sa.2,sa.3)
> tests.T.sa<-Matrix(as.matrix(tests.sa),sparse=T)
> testPredictions.sa <- predict(object = bst.sa,newdata = tests.T.sa)
> 
> sb.1<-dlt$sb[2:(dim(dlt)[1]-2)]
> sb.2<-dlt$sb[3:(dim(dlt)[1]-1)]
> sb.3<-dlt$sb[4:dim(dlt)[1]]
> tests.sb<-data.frame(sb.1,sb.2,sb.3)
> tests.T.sb<-Matrix(as.matrix(tests.sb),sparse=T)
> testPredictions.sb <- predict(object = bst.sb,newdata = tests.T.sb)
> 
> sa.pre<-round(testPredictions.sa)
> sb.pre<-round(testPredictions.sb)
> 
> c(tail(sa.pre,1),tail(sb.pre,1))
[1] 93  7
> 