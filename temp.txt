> #clu:
> sort(table(data.xgb.clu$a1.clu))

5 8 4 6 7 
1 3 4 4 4 
> sort(table(data.xgb.clu$a2.clu))

 8  9 12 15 10 11 14 13 
 1  1  1  1  2  3  3  4 
> sort(table(data.xgb.clu$a3.clu))

21 24 25 26 27 15 18 19 23 22 
 1  1  1  1  1  2  2  2  2  3 
> sort(table(data.xgb.clu$a4.clu))

20 21 24 27 22 25 26 23 
 1  1  1  1  2  3  3  4 
> sort(table(data.xgb.clu$a5.clu))

21 24 31 23 26 28 29 30 
 1  1  1  2  2  2  3  4 
> sort(table(data.xgb.clu$b1.clu))

7 8 5 6 
3 3 5 5 
> sort(table(data.xgb.clu$b2.clu))

11 12  8 10  7  9 
 1  1  3  3  4  4 
> #row:
> sort(table(data.xgb.row$a1.row))

 3  8 11  5  6  7 
 1  1  1  2  5  6 
> sort(table(data.xgb.row$a2.row))

 7  8  9 10 12 13 11 
 1  1  1  2  2  4  5 
> sort(table(data.xgb.row$a3.row))

18 21 14 16 17 20 19 
 1  1  2  2  2  3  5 
> sort(table(data.xgb.row$a4.row))

18 25 28 23 26 27 22 24 
 1  1  1  2  2  2  3  4 
> sort(table(data.xgb.row$a5.row))

26 30 28 32 29 31 
 1  1  2  3  4  5 
> sort(table(data.xgb.row$b1.row))

2 5 6 4 3 
1 2 2 4 7 
> sort(table(data.xgb.row$b2.row))

 8  9  7 10 
 2  3  5  6 
> #clu.row:
> sort(table(data.xgb.clu.row.aver$a1))

-2  5  7  8 10  2  3  4  6 
 1  1  1  1  1  2  3  3  3 
> sort(table(data.xgb.clu.row.aver$a2))

 4  6 14 18 21  9 13 15 16 11 
 1  1  1  1  1  2  2  2  2  3 
> sort(table(data.xgb.clu.row.aver$a3))

12 13 15 18 14 16 19 26 17 
 1  1  1  1  2  2  2  2  4 
> sort(table(data.xgb.clu.row.aver$a4))

16 18 19 20 21 23 24 25 30 28 22 
 1  1  1  1  1  1  1  1  1  2  5 
> sort(table(data.xgb.clu.row.aver$a5))

16 23 25 26 28 34 27 29 21 30 
 1  1  1  1  1  1  2  2  3  3 
> sort(table(data.xgb.clu.row.aver$b1))

-1  2  6  3  7  5  4 
 1  1  1  2  2  3  6 
> sort(table(data.xgb.clu.row.aver$b2))

 4  6  7 12  9 10  8 
 1  1  1  1  3  3  6 
> #row.row:
> sort(table(data.xgb.row.row.aver$a1))

 6  9 12  4  5  8  1  3 
 1  1  1  2  2  2  3  4 
> sort(table(data.xgb.row.row.aver$a2))

 7 10 11 12 16 18  5  9 13 14 15 
 1  1  1  1  1  1  2  2  2  2  2 
> sort(table(data.xgb.row.row.aver$a3))

17 18 19 22 26 10 15 16 23 20 
 1  1  1  1  1  2  2  2  2  3 
> sort(table(data.xgb.row.row.aver$a4))

 9 24 25 30 31 20 28 21 26 
 1  1  1  1  1  2  2  3  4 
> sort(table(data.xgb.row.row.aver$a5))

20 21 24 30 32 35 25 31 28 29 
 1  1  1  1  1  1  2  2  3  3 
> sort(table(data.xgb.row.row.aver$b1))

2 3 7 8 4 9 5 6 
1 1 1 1 2 2 4 4 
> sort(table(data.xgb.row.row.aver$b2))

 5 12  6  7  8 10 13 11 
 1  1  2  2  2  2  2  4 
> 
> 
> data.xgb.clu.clu
[1]  2 12 19 27 30  4  9
> data.rdf.clu.clu
 1  1  1  1  1  1  1 
 5 13 17 24 28  5  8 
> data.xgb.row.clu
[1]  4 15 20 21 27  3 10
> data.xgb.clu.row
[1]  9 10  9 27 26  2  6
> data.xgb.row.row
[1]  7 10 10 11 25  3  2
> data.xgb.clu.cum
   a1 a2 a3 a4 a5 b1 b2
1   5 17 19 28 31  6  9
2   5 17 19 28 31  6  9
3   5 17 19 28 31  6  9
4   5 17 19 28 31  6  9
5   5 17 19 28 31  6  9
6   5 17 19 28 31  6  9
7   5 17 19 28 31  6  9
8   5 17 19 28 31  6  9
9   5 17 19 28 31  6  9
10  5 17 19 28 31  6  9
11  5 17 19 28 31  6  9
12  5 17 19 28 31  6  9
13  5 17 19 28 31  6  9
14  5 17 19 28 31  6  9
15  5 17 19 28 31  6  9
16  5 17 19 28 31  6  9
> data.xgb.row.cum
   a1 a2 a3 a4 a5 b1 b2
1   2 17 19 18 30  3 11
2   2 17 19 18 30  3 11
3   2 17 19 18 30  3 11
4   2 17 19 18 30  3 11
5   2 17 19 18 30  3 11
6   2 17 19 18 30  3 11
7   2 17 19 18 30  3 11
8   2 17 19 18 30  3 11
9   2 17 19 18 30  3 11
10  2 17 19 18 30  3 11
11  2 17 19 18 30  3 11
12  2 17 19 18 30  3 11
13  2 17 19 18 30  3 11
14  2 17 19 18 30  3 11
15  2 17 19 18 30  3 11
16  2 17 19 18 30  3 11
> 
> data.xgb.clu.clu.a<-sort(data.xgb.clu.clu[1:5])
> data.xgb.clu.clu.b<-sort(data.xgb.clu.clu[6:7])
> 
> data.rdf.clu.clu.a<-sort(as.numeric(data.rdf.clu.clu[1:5]))
> data.rdf.clu.clu.b<-sort(as.numeric(data.rdf.clu.clu[6:7]))
> 
> data.xgb.row.clu.a<-sort(data.xgb.row.clu[1:5])
> data.xgb.row.clu.b<-sort(data.xgb.row.clu[6:7])
> 
> data.xgb.clu.row.a<-sort(data.xgb.clu.row[1:5])
> data.xgb.clu.row.b<-sort(data.xgb.clu.row[6:7])
> 
> data.xgb.row.row.a<-sort(data.xgb.row.row[1:5])
> data.xgb.row.row.b<-sort(data.xgb.row.row[6:7])
> 
> r.a1<-c(data.xgb.clu.clu.a[1],data.rdf.clu.clu.a[1],data.xgb.row.clu.a[1],data.xgb.clu.row.a[1],
+         data.xgb.row.row.a[1],data.xgb.clu.cum$a1,data.xgb.row.cum$a1)
> r.a2<-c(data.xgb.clu.clu.a[2],data.rdf.clu.clu.a[2],data.xgb.row.clu.a[2],data.xgb.clu.row.a[2],
+         data.xgb.row.row.a[2],data.xgb.clu.cum$a2,data.xgb.row.cum$a2)
> r.a3<-c(data.xgb.clu.clu.a[3],data.rdf.clu.clu.a[3],data.xgb.row.clu.a[3],data.xgb.clu.row.a[3],
+         data.xgb.row.row.a[3],data.xgb.clu.cum$a3,data.xgb.row.cum$a3)
> r.a4<-c(data.xgb.clu.clu.a[4],data.rdf.clu.clu.a[4],data.xgb.row.clu.a[4],data.xgb.clu.row.a[4],
+         data.xgb.row.row.a[4],data.xgb.clu.cum$a4,data.xgb.row.cum$a4)
> r.a5<-c(data.xgb.clu.clu.a[5],data.rdf.clu.clu.a[5],data.xgb.row.clu.a[5],data.xgb.clu.row.a[5],
+         data.xgb.row.row.a[5],data.xgb.clu.cum$a5,data.xgb.row.cum$a5)
> r.b1<-c(data.xgb.clu.clu.b[1],data.rdf.clu.clu.b[1],data.xgb.row.clu.b[1],data.xgb.clu.row.b[1],
+         data.xgb.row.row.b[1],data.xgb.clu.cum$b1,data.xgb.row.cum$b1)
> r.b2<-c(data.xgb.clu.clu.b[2],data.rdf.clu.clu.b[2],data.xgb.row.clu.b[2],data.xgb.clu.row.b[2],
+         data.xgb.row.row.b[2],data.xgb.clu.cum$b2,data.xgb.row.cum$b2)
> 
> sort(table(r.a1))
r.a1
 4  7  9  2  5 
 1  1  1 17 17 
> sort(table(r.a2))
r.a2
 9 10 12 13 15 17 
 1  1  1  1  1 32 
> sort(table(r.a3))
r.a3
17 20 10 19 
 1  1  2 33 
> sort(table(r.a4))
r.a4
11 21 24 26 27 18 28 
 1  1  1  1  1 16 16 
> sort(table(r.a5))
r.a5
25 28 27 31 30 
 1  1  2 16 17 
> sort(table(r.b1))
r.b1
 4  5  2  6  3 
 1  1  2 16 17 
> sort(table(r.b2))
r.b2
 3  6  8 10 11  9 
 1  1  1  1 16 17 
> ########################################################################################################
> #train.sa<-head(dlt$sa,dim(dlt)[1]-1)
> #train.sb<-head(dlt$sb,dim(dlt)[1]-1)
> #result.sa<-tail(dlt$sa,dim(dlt)[1]-1)
> #result.sb<-tail(dlt$sb,dim(dlt)[1]-1)
> 
> #train
> sa.1<-dlt$sa[1:(dim(dlt)[1]-3)]
> sa.2<-dlt$sa[2:(dim(dlt)[1]-2)]
> sa.3<-dlt$sa[3:(dim(dlt)[1]-1)]
> result.sa<-dlt$sa[4:dim(dlt)[1]]
> trains.sa<-data.frame(sa.1,sa.2,sa.3,result.sa)
> trains.T.sa<-Matrix(as.matrix(trains.sa[,1:3]),sparse=T)
> bst.sa<-xgboost(data = trains.T.sa,label = trains.sa$result.sa,nrounds = 300,print_every_n = 300L)
[1]	train-rmse:65.651482 
[300]	train-rmse:0.120211 
> 
> 
> sb.1<-dlt$sb[1:(dim(dlt)[1]-3)]
> sb.2<-dlt$sb[2:(dim(dlt)[1]-2)]
> sb.3<-dlt$sb[3:(dim(dlt)[1]-1)]
> result.sb<-dlt$sb[4:dim(dlt)[1]]
> trains.sb<-data.frame(sb.1,sb.2,sb.3,result.sb)
> trains.T.sb<-Matrix(as.matrix(trains.sb[,1:3]),sparse=T)
> bst.sb<-xgboost(data = trains.T.sb,label = trains.sb$result.sb,nrounds = 300,print_every_n = 300L)
[1]	train-rmse:10.032920 
[300]	train-rmse:1.004614 
> 
> #predoct
> sa.1<-dlt$sa[2:(dim(dlt)[1]-2)]
> sa.2<-dlt$sa[3:(dim(dlt)[1]-1)]
> #train.sa<-head(dlt$sa,dim(dlt)[1]-1)
> #train.sb<-head(dlt$sb,dim(dlt)[1]-1)
> #result.sa<-tail(dlt$sa,dim(dlt)[1]-1)
> #result.sb<-tail(dlt$sb,dim(dlt)[1]-1)
> 
> #train
> sa.1<-dlt$sa[1:(dim(dlt)[1]-3)]
> sa.2<-dlt$sa[2:(dim(dlt)[1]-2)]
> sa.3<-dlt$sa[3:(dim(dlt)[1]-1)]
> result.sa<-dlt$sa[4:dim(dlt)[1]]
> trains.sa<-data.frame(sa.1,sa.2,sa.3,result.sa)
> trains.T.sa<-Matrix(as.matrix(trains.sa[,1:3]),sparse=T)
> bst.sa<-xgboost(data = trains.T.sa,label = trains.sa$result.sa,nrounds = 300,print_every_n = 300L)
[1]	train-rmse:65.651474 
[300]	train-rmse:0.120211 
> 
> 
> sb.1<-dlt$sb[1:(dim(dlt)[1]-3)]
> sb.2<-dlt$sb[2:(dim(dlt)[1]-2)]
> sb.3<-dlt$sb[3:(dim(dlt)[1]-1)]
> result.sb<-dlt$sb[4:dim(dlt)[1]]
> trains.sb<-data.frame(sb.1,sb.2,sb.3,result.sb)
> trains.T.sb<-Matrix(as.matrix(trains.sb[,1:3]),sparse=T)
> bst.sb<-xgboost(data = trains.T.sb,label = trains.sb$result.sb,nrounds = 300,print_every_n = 300L)
[1]	train-rmse:10.032919 
[300]	train-rmse:1.004614 
> 
> #predoct
> sa.1<-dlt$sa[2:(dim(dlt)[1]-2)]
> sa.2<-dlt$sa[3:(dim(dlt)[1]-1)]
> sa.3<-dlt$sa[4:dim(dlt)[1]]
> tests.sa<-data.frame(sa.1,sa.2,sa.3)
> tests.T.sa<-Matrix(as.matrix(tests.sa),sparse=T)
> testPredictions.sa <- predict(object = bst.sa,newdata = tests.T.sa)
> 
> sb.1<-dlt$sb[2:(dim(dlt)[1]-2)]
> sb.2<-dlt$sb[3:(dim(dlt)[1]-1)]
> sb.3<-dlt$sb[4:dim(dlt)[1]]
> tests.sb<-data.frame(sb.1,sb.2,sb.3)
> tests.T.sb<-Matrix(as.matrix(tests.sb),sparse=T)
> testPredictions.sb <- predict(object = bst.sb,newdata = tests.T.sb)
> 
> sa.pre<-round(testPredictions.sa)
> sb.pre<-round(testPredictions.sb)
> 
> c(tail(sa.pre,1),tail(sb.pre,1))
[1] 87 22
> 
> 
> 
> 
