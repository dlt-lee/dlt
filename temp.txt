> #clu:
> sort(table(data.xgb.clu$a1.clu))

1 4 6 7 5 2 3 
1 1 1 1 2 3 7 
> sort(table(data.xgb.clu$a2.clu))

 6  7  8 14 12 13 17 10 11 
 1  1  1  1  2  2  2  3  3 
> sort(table(data.xgb.clu$a3.clu))

19 22 16 17 20 21 18 23 
 1  1  2  2  2  2  3  3 
> sort(table(data.xgb.clu$a4.clu))

16 21 26 20 22 24 25 27 23 
 1  1  1  2  2  2  2  2  3 
> sort(table(data.xgb.clu$a5.clu))

27 26 28 30 29 31 
 1  2  2  3  4  4 
> sort(table(data.xgb.clu$b1.clu))

2 4 5 3 
2 3 5 6 
> sort(table(data.xgb.clu$b2.clu))

 6 10  9  8  7 
 1  2  3  4  6 
> #row:
> sort(table(data.xgb.row$a1.row))

10  6  4  5  3 
 1  2  4  4  5 
> sort(table(data.xgb.row$a2.row))

 4  6  7  8  9 10 11 13 14 16 19 17 15 
 1  1  1  1  1  1  1  1  1  1  1  2  3 
> sort(table(data.xgb.row$a3.row))

12 13 15 16 18 17 19 20 
 1  1  1  1  2  3  3  4 
> sort(table(data.xgb.row$a4.row))

20 25 21 24 22 23 26 
 1  1  2  2  3  3  4 
> sort(table(data.xgb.row$a5.row))

25 26 29 28 30 33 31 32 
 1  1  1  2  2  2  3  4 
> sort(table(data.xgb.row$b1.row))

8 4 5 6 7 
1 3 3 4 5 
> sort(table(data.xgb.row$b2.row))

 6 11  5  7  8  9 10 
 1  1  2  2  3  3  4 
> #clu.row:
> sort(table(data.xgb.clu.row.aver$a1))

 1  2  3  9 11 21  5  6 10  7 
 1  1  1  1  1  1  2  2  2  4 
> sort(table(data.xgb.clu.row.aver$a2))

 8 10 11 12 13 15 16 20 21  6  7 14 
 1  1  1  1  1  1  1  1  1  2  2  3 
> sort(table(data.xgb.clu.row.aver$a3))

13 14 17 19 22 24 26 18 20 21 23 
 1  1  1  1  1  1  1  2  2  2  3 
> sort(table(data.xgb.clu.row.aver$a4))

21 22 24 25 26 29 27 
 2  2  2  2  2  2  4 
> sort(table(data.xgb.clu.row.aver$a5))

32 33 34 36 39 28 30 31 35 29 
 1  1  1  1  1  2  2  2  2  3 
> sort(table(data.xgb.clu.row.aver$b1))

1 2 3 5 4 6 7 
1 2 2 2 3 3 3 
> sort(table(data.xgb.clu.row.aver$b2))

 8  3  9 10 11  7 
 1  2  2  2  4  5 
> #row.row:
> sort(table(data.xgb.row.row.aver$a1))

-1  1 10  4  5  3  6  7 
 1  1  1  2  2  3  3  3 
> sort(table(data.xgb.row.row.aver$a2))

 5  6  7 10 13 18 19  8  9 12 11 
 1  1  1  1  1  1  1  2  2  2  3 
> sort(table(data.xgb.row.row.aver$a3))

 7 13 16 22 24 14 18 19 20 17 
 1  1  1  1  1  2  2  2  2  3 
> sort(table(data.xgb.row.row.aver$a4))

17 19 21 23 26 30 20 22 24 25 28 
 1  1  1  1  1  1  2  2  2  2  2 
> sort(table(data.xgb.row.row.aver$a5))

26 29 35 27 30 32 33 31 
 1  1  1  2  2  2  2  5 
> sort(table(data.xgb.row.row.aver$b1))

2 3 6 7 5 4 
1 2 2 2 3 6 
> sort(table(data.xgb.row.row.aver$b2))

 5 12  7  9 10  8 
 1  1  2  2  2  8 
> 
> 
> data.xgb.clu.clu
[1]  7 10 17 21 32  5  7
> data.rdf.clu.clu
 1  1  1  1  1  1  1 
 6 13 17 23 32  5  8 
> data.xgb.row.clu
[1]  4  5 17 22 30  5  7
> data.xgb.clu.row
[1]  5  8 18 15 13  3  7
> data.xgb.row.row
[1]  8 13 18 13 19  4  4
> data.xgb.clu.cum
   a1 a2 a3 a4 a5 b1 b2
1   8 17 16 18 34  4  9
2   8 17 16 18 34  4  9
3   8 17 16 18 34  4  9
4   8 17 16 18 34  4  9
5   8 17 16 18 34  4  9
6   8 17 16 18 34  4  9
7   8 17 16 18 34  4  9
8   8 17 16 18 34  4  9
9   8 17 16 18 34  4  9
10  8 17 16 18 34  4  9
11  8 17 16 18 34  4  9
12  8 17 16 18 34  4  9
13  8 17 16 18 34  4  9
14  8 17 16 18 34  4  9
15  8 17 16 18 34  4  9
16  8 17 16 18 34  4  9
> data.xgb.row.cum
   a1 a2 a3 a4 a5 b1 b2
1   4 14 21 23 31  5  8
2   4 14 21 23 31  5  8
3   4 14 21 23 31  5  8
4   4 14 21 23 31  5  8
5   4 14 21 23 31  5  8
6   4 14 21 23 31  5  8
7   4 14 21 23 31  5  8
8   4 14 21 23 31  5  8
9   4 14 21 23 31  5  8
10  4 14 21 23 31  5  8
11  4 14 21 23 31  5  8
12  4 14 21 23 31  5  8
13  4 14 21 23 31  5  8
14  4 14 21 23 31  5  8
15  4 14 21 23 31  5  8
16  4 14 21 23 31  5  8
> 
> ########################################################################################################
> #train.sa<-head(dlt$sa,dim(dlt)[1]-1)
> #train.sb<-head(dlt$sb,dim(dlt)[1]-1)
> #result.sa<-tail(dlt$sa,dim(dlt)[1]-1)
> #result.sb<-tail(dlt$sb,dim(dlt)[1]-1)
> 
> #train
> sa.1<-dlt$sa[1:(dim(dlt)[1]-3)]
> sa.2<-dlt$sa[2:(dim(dlt)[1]-2)]
> sa.3<-dlt$sa[3:(dim(dlt)[1]-1)]
> result.sa<-dlt$sa[4:dim(dlt)[1]]
> trains.sa<-data.frame(sa.1,sa.2,sa.3,result.sa)
> trains.T.sa<-Matrix(as.matrix(trains.sa[,1:3]),sparse=T)
> bst.sa<-xgboost(data = trains.T.sa,label = trains.sa$result.sa,nrounds = 300,print_every_n = 300L)
[1]	train-rmse:65.907547 
[300]	train-rmse:0.126729 
> 
> 
> sb.1<-dlt$sb[1:(dim(dlt)[1]-3)]
> sb.2<-dlt$sb[2:(dim(dlt)[1]-2)]
> sb.3<-dlt$sb[3:(dim(dlt)[1]-1)]
> result.sb<-dlt$sb[4:dim(dlt)[1]]
> trains.sb<-data.frame(sb.1,sb.2,sb.3,result.sb)
> trains.T.sb<-Matrix(as.matrix(trains.sb[,1:3]),sparse=T)
> bst.sb<-xgboost(data = trains.T.sb,label = trains.sb$result.sb,nrounds = 300,print_every_n = 300L)
[1]	train-rmse:9.952506 
[300]	train-rmse:0.974128 
> 
> #predoct
> sa.1<-dlt$sa[2:(dim(dlt)[1]-2)]
> sa.2<-dlt$sa[3:(dim(dlt)[1]-1)]
> sa.3<-dlt$sa[4:dim(dlt)[1]]
> tests.sa<-data.frame(sa.1,sa.2,sa.3)
> tests.T.sa<-Matrix(as.matrix(tests.sa),sparse=T)
> testPredictions.sa <- predict(object = bst.sa,newdata = tests.T.sa)
> 
> sb.1<-dlt$sb[2:(dim(dlt)[1]-2)]
> sb.2<-dlt$sb[3:(dim(dlt)[1]-1)]
> sb.3<-dlt$sb[4:dim(dlt)[1]]
> tests.sb<-data.frame(sb.1,sb.2,sb.3)
> tests.T.sb<-Matrix(as.matrix(tests.sb),sparse=T)
> testPredictions.sb <- predict(object = bst.sb,newdata = tests.T.sb)
> 
> sa.pre<-round(testPredictions.sa)
> sb.pre<-round(testPredictions.sb)
> 
> c(tail(sa.pre,1),tail(sb.pre,1))
[1] 80 11
