> #clu:
> sort(table(data.xgb.clu$a1.clu))

 6  7 12 14  4  8  9 10 11 
 1  1  1  1  2  2  2  2  4 
> sort(table(data.xgb.clu$a2.clu))

 4  6 10 13 14 11  8  9 
 1  1  1  1  1  2  3  6 
> sort(table(data.xgb.clu$a3.clu))

12 22 24 25 18 20 14 19 
 1  1  1  1  2  2  3  5 
> sort(table(data.xgb.clu$a4.clu))

20 23 21 25 26 28 24 
 1  1  2  2  3  3  4 
> sort(table(data.xgb.clu$a5.clu))

26 27 29 33 28 32 30 31 
 1  1  1  1  2  2  4  4 
> sort(table(data.xgb.clu$b1.clu))

2 7 6 9 3 4 5 
1 1 2 2 3 3 4 
> sort(table(data.xgb.clu$b2.clu))

 8 10  9 11  6  7  5 
 1  1  2  2  3  3  4 
> #row:
> sort(table(data.xgb.row$a1.row))

 8 14  5  7  9 11 13  6 
 1  1  2  2  2  2  2  4 
> sort(table(data.xgb.row$a2.row))

 9 11 14 15  7 13 10 12 
 1  1  1  1  2  2  3  5 
> sort(table(data.xgb.row$a3.row))

12 18 23 24 20 21 17 19 
 1  1  1  1  2  2  3  5 
> sort(table(data.xgb.row$a4.row))

26 27 21 23 24 25 
 1  1  2  2  3  7 
> sort(table(data.xgb.row$a5.row))

24 27 26 28 29 30 31 
 1  1  2  2  3  3  4 
> sort(table(data.xgb.row$b1.row))

3 7 8 5 6 4 
1 1 1 2 3 8 
> sort(table(data.xgb.row$b2.row))

 7 11 10  8  9 
 1  1  2  3  9 
> #clu.row:
> sort(table(data.xgb.clu.row.aver$a1))

-1  0  4  7 10 12  2  3  6  5 
 1  1  1  1  1  1  2  2  2  4 
> sort(table(data.xgb.clu.row.aver$a2))

 4  6 12 13 14 15  7 11 16  9 
 1  1  1  1  1  1  2  2  2  4 
> sort(table(data.xgb.clu.row.aver$a3))

11 16 17 21 12 19 22 25 13 
 1  1  1  1  2  2  2  2  4 
> sort(table(data.xgb.clu.row.aver$a4))

14 16 19 20 22 25 29 30 18 21 23 26 
 1  1  1  1  1  1  1  1  2  2  2  2 
> sort(table(data.xgb.clu.row.aver$a5))

23 27 28 31 33 34 35 29 26 30 
 1  1  1  1  1  1  1  2  3  4 
> sort(table(data.xgb.clu.row.aver$b1))

2 7 8 9 3 4 5 6 
1 1 1 1 3 3 3 3 
> sort(table(data.xgb.clu.row.aver$b2))

 4 12  7 11  8 10  9 
 1  1  2  2  3  3  4 
> #row.row:
> sort(table(data.xgb.row.row.aver$a1))

1 5 2 4 7 8 6 
1 1 2 2 2 2 6 
> sort(table(data.xgb.row.row.aver$a2))

 1  2  3  6  7 10 11 13 12 14  9 
 1  1  1  1  1  1  1  1  2  2  4 
> sort(table(data.xgb.row.row.aver$a3))

 2  3 12 18 20 24  7 10 15 17 21 
 1  1  1  1  1  1  2  2  2  2  2 
> sort(table(data.xgb.row.row.aver$a4))

16 25 26 27 18 21 23 17 19 
 1  1  1  1  2  2  2  3  3 
> sort(table(data.xgb.row.row.aver$a5))

23 26 28 29 30 32 24 25 27 
 1  1  1  1  1  1  2  3  5 
> sort(table(data.xgb.row.row.aver$b1))

2 7 3 5 4 
1 1 3 4 7 
> sort(table(data.xgb.row.row.aver$b2))

 6 12  7  8  9 10 11 
 1  1  2  3  3  3  3 
> 
> 
> data.xgb.clu.clu
[1]  2 15 12 21 29  4 10
> data.rdf.clu.clu
 1  1  1  1  1  1  1 
 6 13 15 23 30  5  8 
> data.xgb.row.clu
[1]  6 14 15 18 26  5 10
> data.xgb.clu.row
[1] 11 11 15 17 25  4  7
> data.xgb.row.row
[1] 14 11 15 20 23  4  4
> data.xgb.clu.cum
   a1 a2 a3 a4 a5 b1 b2
1   5 13 10 25 27  6 12
2   5 13 10 25 27  6 12
3   5 13 10 25 27  6 12
4   5 13 10 25 27  6 12
5   5 13 10 25 27  6 12
6   5 13 10 25 27  6 12
7   5 13 10 25 27  6 12
8   5 13 10 25 28  6 12
9   5 13 10 25 27  6 12
10  5 13 10 25 27  6 12
11  5 13 10 25 27  6 12
12  5 13 10 25 27  6 12
13  5 13 10 25 27  6 12
14  5 13 10 25 27  6 12
15  5 13 10 25 27  6 12
16  5 13 10 25 28  6 12
> data.xgb.row.cum
   a1 a2 a3 a4 a5 b1 b2
1   9  8 20 25 25  5  9
2   9  8 20 25 25  5  9
3   9  8 20 25 25  5  9
4   9  8 20 25 25  5  9
5   9  8 20 25 25  5  9
6   9  8 20 25 25  5  9
7   9  8 20 25 25  5  9
8   9  8 20 25 25  5  9
9   9  8 20 25 25  5  9
10  9  8 20 25 25  5  9
11  9  8 20 25 25  5  9
12  9  8 20 25 25  5  9
13  9  8 20 25 25  5  9
14  9  8 20 25 25  5  9
15  9  8 20 25 25  5  9
16  9  8 20 25 25  5  9
> 
> data.xgb.clu.clu.a<-sort(data.xgb.clu.clu[1:5])
> data.xgb.clu.clu.b<-sort(data.xgb.clu.clu[6:7])
> 
> data.rdf.clu.clu.a<-sort(as.numeric(data.rdf.clu.clu[1:5]))
> data.rdf.clu.clu.b<-sort(as.numeric(data.rdf.clu.clu[6:7]))
> 
> data.xgb.row.clu.a<-sort(data.xgb.row.clu[1:5])
> data.xgb.row.clu.b<-sort(data.xgb.row.clu[6:7])
> 
> data.xgb.clu.row.a<-sort(data.xgb.clu.row[1:5])
> data.xgb.clu.row.b<-sort(data.xgb.clu.row[6:7])
> 
> data.xgb.row.row.a<-sort(data.xgb.row.row[1:5])
> data.xgb.row.row.b<-sort(data.xgb.row.row[6:7])
> 
> r.a1<-c(data.xgb.clu.clu.a[1],data.rdf.clu.clu.a[1],data.xgb.row.clu.a[1],data.xgb.clu.row.a[1],
+         data.xgb.row.row.a[1],data.xgb.clu.cum$a1)
> r.a2<-c(data.xgb.clu.clu.a[2],data.rdf.clu.clu.a[2],data.xgb.row.clu.a[2],data.xgb.clu.row.a[2],
+         data.xgb.row.row.a[2],data.xgb.clu.cum$a2)
> r.a3<-c(data.xgb.clu.clu.a[3],data.rdf.clu.clu.a[3],data.xgb.row.clu.a[3],data.xgb.clu.row.a[3],
+         data.xgb.row.row.a[3],data.xgb.clu.cum$a3)
> r.a4<-c(data.xgb.clu.clu.a[4],data.rdf.clu.clu.a[4],data.xgb.row.clu.a[4],data.xgb.clu.row.a[4],
+         data.xgb.row.row.a[4],data.xgb.clu.cum$a4)
> r.a5<-c(data.xgb.clu.clu.a[5],data.rdf.clu.clu.a[5],data.xgb.row.clu.a[5],data.xgb.clu.row.a[5],
+         data.xgb.row.row.a[5],data.xgb.clu.cum$a5)
> r.b1<-c(data.xgb.clu.clu.b[1],data.rdf.clu.clu.b[1],data.xgb.row.clu.b[1],data.xgb.clu.row.b[1],
+         data.xgb.row.row.b[1],data.xgb.clu.cum$b1)
> r.b2<-c(data.xgb.clu.clu.b[2],data.rdf.clu.clu.b[2],data.xgb.row.clu.b[2],data.xgb.clu.row.b[2],
+         data.xgb.row.row.b[2],data.xgb.clu.cum$b2)
> 
> sort(table(r.a1))
r.a1
 2  6 11  5 
 1  2  2 16 
> sort(table(r.a2))
r.a2
11 12 14 13 
 1  1  2 17 
> sort(table(r.a3))
r.a3
15 10 
 5 16 
> sort(table(r.a4))
r.a4
17 18 20 21 23 25 
 1  1  1  1  1 16 
> sort(table(r.a5))
r.a5
23 25 26 29 30 28 27 
 1  1  1  1  1  2 14 
> sort(table(r.b1))
r.b1
 5  4  6 
 2  3 16 
> sort(table(r.b2))
r.b2
 4  7  8 10 12 
 1  1  1  2 16 
> ########################################################################################################
> #train.sa<-head(dlt$sa,dim(dlt)[1]-1)
> #train.sb<-head(dlt$sb,dim(dlt)[1]-1)
> #result.sa<-tail(dlt$sa,dim(dlt)[1]-1)
> #result.sb<-tail(dlt$sb,dim(dlt)[1]-1)
> 
> #train
> sa.1<-dlt$sa[1:(dim(dlt)[1]-3)]
> sa.2<-dlt$sa[2:(dim(dlt)[1]-2)]
> sa.3<-dlt$sa[3:(dim(dlt)[1]-1)]
> result.sa<-dlt$sa[4:dim(dlt)[1]]
> trains.sa<-data.frame(sa.1,sa.2,sa.3,result.sa)
> trains.T.sa<-Matrix(as.matrix(trains.sa[,1:3]),sparse=T)
> bst.sa<-xgboost(data = trains.T.sa,label = trains.sa$result.sa,nrounds = 300,print_every_n = 300L)
[1]	train-rmse:65.791962 
[300]	train-rmse:0.148256 
> 
> 
> sb.1<-dlt$sb[1:(dim(dlt)[1]-3)]
> sb.2<-dlt$sb[2:(dim(dlt)[1]-2)]
> sb.3<-dlt$sb[3:(dim(dlt)[1]-1)]
> result.sb<-dlt$sb[4:dim(dlt)[1]]
> trains.sb<-data.frame(sb.1,sb.2,sb.3,result.sb)
> trains.T.sb<-Matrix(as.matrix(trains.sb[,1:3]),sparse=T)
> bst.sb<-xgboost(data = trains.T.sb,label = trains.sb$result.sb,nrounds = 300,print_every_n = 300L)
[1]	train-rmse:9.988678 
[300]	train-rmse:1.001215 
> 
> #predoct
> sa.1<-dlt$sa[2:(dim(dlt)[1]-2)]
> sa.2<-dlt$sa[3:(dim(dlt)[1]-1)]
> sa.3<-dlt$sa[4:dim(dlt)[1]]
> tests.sa<-data.frame(sa.1,sa.2,sa.3)
> tests.T.sa<-Matrix(as.matrix(tests.sa),sparse=T)
> testPredictions.sa <- predict(object = bst.sa,newdata = tests.T.sa)
> 
> sb.1<-dlt$sb[2:(dim(dlt)[1]-2)]
> sb.2<-dlt$sb[3:(dim(dlt)[1]-1)]
> sb.3<-dlt$sb[4:dim(dlt)[1]]
> tests.sb<-data.frame(sb.1,sb.2,sb.3)
> tests.T.sb<-Matrix(as.matrix(tests.sb),sparse=T)
> testPredictions.sb <- predict(object = bst.sb,newdata = tests.T.sb)
> 
> sa.pre<-round(testPredictions.sa)
> sb.pre<-round(testPredictions.sb)
> 
> c(tail(sa.pre,1),tail(sb.pre,1))
[1] 114  15
> 