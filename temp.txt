> #clu:
> sort(table(data.xgb.clu$a1.clu))

1 3 7 6 5 
1 1 3 5 6 
> sort(table(data.xgb.clu$a2.clu))

 3  8 11 14  9 10 
 1  2  2  2  4  5 
> sort(table(data.xgb.clu$a3.clu))

10 19 20 22 27 12 15 16 17 18 
 1  1  1  1  1  2  2  2  2  3 
> sort(table(data.xgb.clu$a4.clu))

26 27 29 31 20 21 25 22 24 
 1  1  1  1  2  2  2  3  3 
> sort(table(data.xgb.clu$a5.clu))

25 29 30 32 31 
 1  1  2  5  7 
> sort(table(data.xgb.clu$b1.clu))

2 6 4 3 5 
1 1 4 5 5 
> sort(table(data.xgb.clu$b2.clu))

6 7 9 8 
1 4 5 6 
> #row:
> sort(table(data.xgb.row$a1.row))

 3  5  7  2  6  8  9 10  4 
 1  1  1  2  2  2  2  2  3 
> sort(table(data.xgb.row$a2.row))

12  7  9  8 11 10 
 1  2  2  3  3  5 
> sort(table(data.xgb.row$a3.row))

14 15 17 19 16 18 
 1  2  2  2  3  6 
> sort(table(data.xgb.row$a4.row))

19 21 23 26 20 22 27 24 25 
 1  1  1  1  2  2  2  3  3 
> sort(table(data.xgb.row$a5.row))

26 29 30 32 31 
 1  2  4  4  5 
> sort(table(data.xgb.row$b1.row))

6 4 5 
2 5 9 
> sort(table(data.xgb.row$b2.row))

 9 11  8 10 
 2  2  6  6 
> #clu.row:
> sort(table(data.xgb.clu.row.aver$a1))

3 8 5 2 4 6 
1 1 2 3 3 6 
> sort(table(data.xgb.clu.row.aver$a2))

 8 13 16 14 15 11  9 
 1  1  1  2  2  4  5 
> sort(table(data.xgb.clu.row.aver$a3))

11 20 24 26 18 21 14 19 
 1  1  1  1  2  2  4  4 
> sort(table(data.xgb.clu.row.aver$a4))

22 23 26 27 29 35 19 21 25 
 1  1  1  1  1  1  2  3  5 
> sort(table(data.xgb.clu.row.aver$a5))

23 24 26 28 32 33 25 27 31 29 
 1  1  1  1  1  1  2  2  2  4 
> sort(table(data.xgb.clu.row.aver$b1))

0 6 3 4 5 1 2 
1 1 2 2 2 3 5 
> sort(table(data.xgb.clu.row.aver$b2))

 6  7 11  8 10  9 
 1  1  2  3  3  6 
> #row.row:
> sort(table(data.xgb.row.row.aver$a1))

1 6 8 3 7 5 4 
1 1 1 2 2 4 5 
> sort(table(data.xgb.row.row.aver$a2))

 6  8 12 15  9 10 11 
 1  1  2  2  3  3  4 
> sort(table(data.xgb.row.row.aver$a3))

10 12 14 18 22 28 20 21 17 19 
 1  1  1  1  1  1  2  2  3  3 
> sort(table(data.xgb.row.row.aver$a4))

16 20 24 25 30 31 32 19 22 26 23 
 1  1  1  1  1  1  1  2  2  2  3 
> sort(table(data.xgb.row.row.aver$a5))

20 35 29 31 32 27 28 
 1  1  2  2  2  4  4 
> sort(table(data.xgb.row.row.aver$b1))

1 4 6 2 3 5 
2 2 2 3 3 4 
> sort(table(data.xgb.row.row.aver$b2))

 1 10  6  7 11  8  9 
 1  1  2  2  2  4  4 
> 
> 
> data.xgb.clu.clu
[1]  5 12 15 23 30  5 10
> data.rdf.clu.clu
 1  1  1  1  1  1  1 
 5 13 17 24 31  5  8 
> data.xgb.row.clu
[1]  7 17 19 19 22  2  7
> data.xgb.clu.row
[1]  7 14 13 13 18  5  7
> data.xgb.row.row
[1]  9 13 13 13 14  4  6
> data.xgb.clu.cum
   a1 a2 a3 a4 a5 b1 b2
1   7 14 17 23 31  5  9
2   7 14 17 23 31  5  9
3   7 14 17 23 31  5  9
4   7 14 17 23 31  5  9
5   7 14 17 23 31  5  9
6   7 14 17 23 31  5  9
7   7 14 17 23 31  5  9
8   7 14 17 23 31  5  9
9   7 14 17 23 31  5  9
10  7 14 17 23 32  5  9
11  7 14 17 23 31  5  9
12  7 14 17 23 31  5  9
13  7 14 17 23 31  5  9
14  7 14 17 23 31  5  9
15  7 14 17 23 31  5  9
16  7 14 17 23 31  5  9
> data.xgb.row.cum
   a1 a2 a3 a4 a5 b1 b2
1   4  8 18 21 23  4  8
2   4  8 18 21 23  4  8
3   4  8 18 21 23  4  8
4   4  8 18 21 23  4  8
5   4  8 18 21 23  4  8
6   4  8 18 21 23  4  8
7   4  8 18 21 23  4  8
8   4  8 18 21 23  4  8
9   4  8 18 21 23  4  8
10  4  8 18 21 23  4  8
11  4  8 18 21 23  4  8
12  4  8 18 21 23  4  8
13  4  8 18 21 23  4  8
14  4  8 18 21 23  4  8
15  4  8 18 21 23  4  8
16  4  8 18 21 23  4  8
> 
> ########################################################################################################
> #train.sa<-head(dlt$sa,dim(dlt)[1]-1)
> #train.sb<-head(dlt$sb,dim(dlt)[1]-1)
> #result.sa<-tail(dlt$sa,dim(dlt)[1]-1)
> #result.sb<-tail(dlt$sb,dim(dlt)[1]-1)
> 
> #train
> sa.1<-dlt$sa[1:(dim(dlt)[1]-3)]
> sa.2<-dlt$sa[2:(dim(dlt)[1]-2)]
> sa.3<-dlt$sa[3:(dim(dlt)[1]-1)]
> result.sa<-dlt$sa[4:dim(dlt)[1]]
> trains.sa<-data.frame(sa.1,sa.2,sa.3,result.sa)
> trains.T.sa<-Matrix(as.matrix(trains.sa[,1:3]),sparse=T)
> bst.sa<-xgboost(data = trains.T.sa,label = trains.sa$result.sa,nrounds = 300,print_every_n = 300L)
[1]	train-rmse:65.917229 
[300]	train-rmse:0.095325 
> 
> 
> sb.1<-dlt$sb[1:(dim(dlt)[1]-3)]
> sb.2<-dlt$sb[2:(dim(dlt)[1]-2)]
> sb.3<-dlt$sb[3:(dim(dlt)[1]-1)]
> result.sb<-dlt$sb[4:dim(dlt)[1]]
> trains.sb<-data.frame(sb.1,sb.2,sb.3,result.sb)
> trains.T.sb<-Matrix(as.matrix(trains.sb[,1:3]),sparse=T)
> bst.sb<-xgboost(data = trains.T.sb,label = trains.sb$result.sb,nrounds = 300,print_every_n = 300L)
[1]	train-rmse:9.954897 
[300]	train-rmse:0.962495 
> 
> #predoct
> sa.1<-dlt$sa[2:(dim(dlt)[1]-2)]
> sa.2<-dlt$sa[3:(dim(dlt)[1]-1)]
> sa.3<-dlt$sa[4:dim(dlt)[1]]
> tests.sa<-data.frame(sa.1,sa.2,sa.3)
> tests.T.sa<-Matrix(as.matrix(tests.sa),sparse=T)
> testPredictions.sa <- predict(object = bst.sa,newdata = tests.T.sa)
> 
> sb.1<-dlt$sb[2:(dim(dlt)[1]-2)]
> sb.2<-dlt$sb[3:(dim(dlt)[1]-1)]
> sb.3<-dlt$sb[4:dim(dlt)[1]]
> tests.sb<-data.frame(sb.1,sb.2,sb.3)
> tests.T.sb<-Matrix(as.matrix(tests.sb),sparse=T)
> testPredictions.sb <- predict(object = bst.sb,newdata = tests.T.sb)
> 
> sa.pre<-round(testPredictions.sa)
> sb.pre<-round(testPredictions.sb)
> 
> c(tail(sa.pre,1),tail(sb.pre,1))
[1] 98 10
