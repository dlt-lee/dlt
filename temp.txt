> #clu:
> sort(table(data.xgb.clu$a1.clu))

 2  3  6 11 12  7  8 10  9 
 1  1  1  1  1  2  2  3  4 
> sort(table(data.xgb.clu$a2.clu))

 8  9 16 10 13 14 11 12 
 1  1  1  2  2  2  3  4 
> sort(table(data.xgb.clu$a3.clu))

12 16 17 18 20 19 21 22 24 23 
 1  1  1  1  1  2  2  2  2  3 
> sort(table(data.xgb.clu$a4.clu))

29 30 31 32 24 25 27 26 28 
 1  1  1  1  2  2  2  3  3 
> sort(table(data.xgb.clu$a5.clu))

26 27 25 28 29 31 32 30 
 1  1  2  2  2  2  2  4 
> sort(table(data.xgb.clu$b1.clu))

2 7 9 3 6 4 5 
1 1 1 2 3 4 4 
> sort(table(data.xgb.clu$b2.clu))

 5  7 11  8 10  9 
 1  1  2  3  4  5 
> #row:
> sort(table(data.xgb.row$a1.row))

 2  8 11  3  5  4  7 
 1  1  1  2  3  4  4 
> sort(table(data.xgb.row$a2.row))

 9 15  8 10 13 14 16 11 
 1  1  2  2  2  2  2  4 
> sort(table(data.xgb.row$a3.row))

12 18 20 21 23 26 15 19 17 22 
 1  1  1  1  1  1  2  2  3  3 
> sort(table(data.xgb.row$a4.row))

22 28 30 23 27 29 25 26 
 1  1  1  2  2  2  3  4 
> sort(table(data.xgb.row$a5.row))

30 32 29 33 28 31 
 1  1  2  2  3  7 
> sort(table(data.xgb.row$b1.row))

2 7 4 5 3 
1 1 3 4 7 
> sort(table(data.xgb.row$b2.row))

 7  8  9 11 10 
 1  2  3  4  6 
> #clu.row:
> sort(table(data.xgb.clu.row.aver$a1))

 8 10 12 13  5  2  6  4 
 1  1  1  1  2  3  3  4 
> sort(table(data.xgb.clu.row.aver$a2))

 7 11 12 14 16 15  9 13 
 1  1  1  1  1  3  4  4 
> sort(table(data.xgb.clu.row.aver$a3))

15 18 21 22 23 16 17 20 19 
 1  1  1  1  1  2  2  3  4 
> sort(table(data.xgb.clu.row.aver$a4))

17 19 20 21 26 24 27 22 23 
 1  1  1  1  1  2  2  3  4 
> sort(table(data.xgb.clu.row.aver$a5))

26 27 25 28 29 30 32 31 
 1  1  2  2  2  2  2  4 
> sort(table(data.xgb.clu.row.aver$b1))

0 2 7 5 6 3 4 
1 1 1 2 2 4 5 
> sort(table(data.xgb.clu.row.aver$b2))

 8  7 11 12 10  9 
 1  2  2  2  4  5 
> #row.row:
> sort(table(data.xgb.row.row.aver$a1))

 2  8  9 13  3  5  6  4 
 1  1  1  1  2  3  3  4 
> sort(table(data.xgb.row.row.aver$a2))

14 17 18  8 10 15 11 12 
 1  1  1  2  2  2  3  4 
> sort(table(data.xgb.row.row.aver$a3))

10 15 17 18 19 22 24 28 14 20 21 23 
 1  1  1  1  1  1  1  1  2  2  2  2 
> sort(table(data.xgb.row.row.aver$a4))

18 22 26 28 30 24 23 25 27 
 1  1  1  1  1  2  3  3  3 
> sort(table(data.xgb.row.row.aver$a5))

25 35 29 33 30 32 31 
 1  1  2  2  3  3  4 
> sort(table(data.xgb.row.row.aver$b1))

1 2 3 6 4 5 
1 2 2 3 4 4 
> sort(table(data.xgb.row.row.aver$b2))

 6 11  7  8 12  9 10 
 1  1  2  2  2  4  4 
> 
> 
> data.xgb.clu.clu
[1]  8 12 19 24 32  5  7
> data.rdf.clu.clu
 1  1  1  1  1  1  1 
 8 14 20 24 31  4  8 
> data.xgb.row.clu
[1]  7 10 18 30 27  4  9
> data.xgb.clu.row
[1]  5  6 14 25 25  2  5
> data.xgb.row.row
[1]  3  7 10 18 22  6  3
> data.xgb.clu.cum
   a1 a2 a3 a4 a5 b1 b2
1   8 19 18 23 32  5  9
2   8 19 18 23 32  5  9
3   8 19 18 23 32  5  9
4   8 19 18 23 32  5  9
5   8 19 18 23 32  5  9
6   8 19 18 23 32  5  9
7   8 19 18 23 32  5  9
8   8 19 18 23 32  5  9
9   8 19 18 23 32  5  9
10  8 19 18 23 32  5  9
11  8 19 18 23 32  5  9
12  8 19 18 23 32  5  9
13  8 19 18 23 32  5  9
14  8 19 18 23 32  5  9
15  8 19 18 23 32  5  9
16  8 19 18 23 32  5  9
> data.xgb.row.cum
   a1 a2 a3 a4 a5 b1 b2
1   9 11 19 30 24  3  8
2   9 11 19 30 24  3  8
3   9 11 19 30 24  3  8
4   9 11 19 30 24  3  8
5   9 11 19 30 24  3  8
6   9 11 19 30 24  3  8
7   9 11 19 30 24  3  8
8   9 11 19 30 24  3  8
9   9 11 19 30 24  3  8
10  9 11 19 30 24  3  8
11  9 11 19 30 24  3  8
12  9 11 19 30 24  3  8
13  9 11 19 30 24  3  8
14  9 11 19 30 24  3  8
15  9 11 19 30 24  3  8
16  9 11 19 30 24  3  8
> 
> ########################################################################################################
> #train.sa<-head(dlt$sa,dim(dlt)[1]-1)
> #train.sb<-head(dlt$sb,dim(dlt)[1]-1)
> #result.sa<-tail(dlt$sa,dim(dlt)[1]-1)
> #result.sb<-tail(dlt$sb,dim(dlt)[1]-1)
> 
> #train
> sa.1<-dlt$sa[1:(dim(dlt)[1]-3)]
> sa.2<-dlt$sa[2:(dim(dlt)[1]-2)]
> sa.3<-dlt$sa[3:(dim(dlt)[1]-1)]
> result.sa<-dlt$sa[4:dim(dlt)[1]]
> trains.sa<-data.frame(sa.1,sa.2,sa.3,result.sa)
> trains.T.sa<-Matrix(as.matrix(trains.sa[,1:3]),sparse=T)
> bst.sa<-xgboost(data = trains.T.sa,label = trains.sa$result.sa,nrounds = 300,print_every_n = 300L)
[1]	train-rmse:65.981880 
[300]	train-rmse:0.111263 
> 
> 
> sb.1<-dlt$sb[1:(dim(dlt)[1]-3)]
> sb.2<-dlt$sb[2:(dim(dlt)[1]-2)]
> sb.3<-dlt$sb[3:(dim(dlt)[1]-1)]
> result.sb<-dlt$sb[4:dim(dlt)[1]]
> trains.sb<-data.frame(sb.1,sb.2,sb.3,result.sb)
> trains.T.sb<-Matrix(as.matrix(trains.sb[,1:3]),sparse=T)
> bst.sb<-xgboost(data = trains.T.sb,label = trains.sb$result.sb,nrounds = 300,print_every_n = 300L)
[1]	train-rmse:9.955527 
[300]	train-rmse:0.969846 
> 
> #predoct
> sa.1<-dlt$sa[2:(dim(dlt)[1]-2)]
> sa.2<-dlt$sa[3:(dim(dlt)[1]-1)]
> sa.3<-dlt$sa[4:dim(dlt)[1]]
> tests.sa<-data.frame(sa.1,sa.2,sa.3)
> tests.T.sa<-Matrix(as.matrix(tests.sa),sparse=T)
> testPredictions.sa <- predict(object = bst.sa,newdata = tests.T.sa)
> 
> sb.1<-dlt$sb[2:(dim(dlt)[1]-2)]
> sb.2<-dlt$sb[3:(dim(dlt)[1]-1)]
> sb.3<-dlt$sb[4:dim(dlt)[1]]
> tests.sb<-data.frame(sb.1,sb.2,sb.3)
> tests.T.sb<-Matrix(as.matrix(tests.sb),sparse=T)
> testPredictions.sb <- predict(object = bst.sb,newdata = tests.T.sb)
> 
> sa.pre<-round(testPredictions.sa)
> sb.pre<-round(testPredictions.sb)
> 
> c(tail(sa.pre,1),tail(sb.pre,1))
[1] 84  8
> 