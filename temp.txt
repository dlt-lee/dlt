> #clu:
> sort(table(data.xgb.clu$a1.clu))

0 3 7 9 4 8 6 5 
1 1 1 1 2 2 3 5 
> sort(table(data.xgb.clu$a2.clu))

 6 10 18  8 12 13 14  7 
 1  1  1  2  2  2  2  5 
> sort(table(data.xgb.clu$a3.clu))

14 15 19 23 24 16 17 18 22 20 
 1  1  1  1  1  2  2  2  2  3 
> sort(table(data.xgb.clu$a4.clu))

20 21 27 19 25 26 24 23 
 1  1  1  2  2  2  3  4 
> sort(table(data.xgb.clu$a5.clu))

21 28 29 36 31 25 27 30 
 1  1  1  1  2  3  3  4 
> sort(table(data.xgb.clu$b1.clu))

5 2 6 4 3 
1 3 3 4 5 
> sort(table(data.xgb.clu$b2.clu))

 7 11 10  8 
 2  2  4  8 
> #row:
> sort(table(data.xgb.row$a1.row))

 2  7  8 10  3  4  6 
 1  1  1  1  2  4  6 
> sort(table(data.xgb.row$a2.row))

10 11  9  7  8 
 1  2  3  4  6 
> sort(table(data.xgb.row$a3.row))

16 17 19 15 20 21 18 
 1  1  1  2  2  2  7 
> sort(table(data.xgb.row$a4.row))

21 22 26 23 25 27 20 24 
 1  1  1  2  2  2  3  4 
> sort(table(data.xgb.row$a5.row))

30 32 29 31 
 3  3  4  6 
> sort(table(data.xgb.row$b1.row))

6 3 5 4 
1 2 4 9 
> sort(table(data.xgb.row$b2.row))

 7  8 11  9 
 3  4  4  5 
> #clu.row:
> sort(table(data.xgb.clu.row.aver$a1))

 9 10  3  4  5  6  7 
 1  1  2  3  3  3  3 
> sort(table(data.xgb.clu.row.aver$a2))

 4 14 17 18  8 12 13 15 
 1  1  1  1  2  2  3  5 
> sort(table(data.xgb.clu.row.aver$a3))

10 11 13 14 15 16 17 18 20 21 24 19 
 1  1  1  1  1  1  1  1  1  2  2  3 
> sort(table(data.xgb.clu.row.aver$a4))

16 18 20 25 26 27 32 23 24 29 21 
 1  1  1  1  1  1  1  2  2  2  3 
> sort(table(data.xgb.clu.row.aver$a5))

25 26 29 31 32 34 28 
 1  1  1  2  2  4  5 
> sort(table(data.xgb.clu.row.aver$b1))

3 7 2 5 8 6 4 
1 1 2 2 2 3 5 
> sort(table(data.xgb.clu.row.aver$b2))

 7 11 12  6  8 10  9 
 1  1  1  2  2  4  5 
> #row.row:
> sort(table(data.xgb.row.row.aver$a1))

 1  2 10  3  4  5  6 
 1  1  1  2  2  3  6 
> sort(table(data.xgb.row.row.aver$a2))

10 14 17  5  7  8 12 15 11 
 1  1  1  2  2  2  2  2  3 
> sort(table(data.xgb.row.row.aver$a3))

11 16 20 21 25 15 18 19 23 14 
 1  1  1  1  1  2  2  2  2  3 
> sort(table(data.xgb.row.row.aver$a4))

17 20 21 22 23 26 29 30 31 33 18 24 25 
 1  1  1  1  1  1  1  1  1  1  2  2  2 
> sort(table(data.xgb.row.row.aver$a5))

26 27 29 36 31 32 33 35 34 
 1  1  1  1  2  2  2  2  4 
> sort(table(data.xgb.row.row.aver$b1))

4 3 2 6 5 
1 2 3 4 6 
> sort(table(data.xgb.row.row.aver$b2))

 6  9 11  5  8 10  7 
 1  1  1  2  2  4  5 
> 
> 
> data.xgb.clu.clu
[1]  3 13 11 22 30  9  9
> data.rdf.clu.clu
 1  1  1  1  1  1  1 
 6 11 16 21 30  6  9 
> data.xgb.row.clu
[1]  8 10 12 28 27  7 10
> data.xgb.clu.row
[1] 12 19 15 16 11  5  3
> data.xgb.row.row
[1] 10  8 10  8 15  3  4
> data.xgb.clu.cum
   a1 a2 a3 a4 a5 b1 b2
1   4 11 11 23 28  6 10
2   4 12 11 23 28  6 10
3   4 12 11 23 28  6 10
4   4 12 11 23 28  6 10
5   4 12 11 23 28  6 10
6   4 11 11 23 28  6 10
7   4 12 11 23 28  6 10
8   4 12 11 23 28  6 10
9   4 11 11 23 28  6 10
10  4 12 11 23 28  6 10
11  4 12 11 23 28  6 10
12  4 12 11 23 28  6 10
13  4 12 11 23 28  6 10
14  4 12 11 23 28  6 10
15  4 12 11 23 28  6 10
16  4 12 11 23 28  6 10
> data.xgb.row.cum
   a1 a2 a3 a4 a5 b1 b2
1  11 10 11 24 29  6  9
2  11 10 11 24 29  6  9
3  11 10 11 24 29  6  9
4  11 10 11 24 29  6  9
5  11 10 11 24 29  6  9
6  11 10 11 24 29  6  9
7  11 10 11 24 29  6  9
8  11 10 11 24 29  6  9
9  11 10 11 24 29  6  9
10 11 10 11 24 29  6  9
11 11 10 11 24 29  6  9
12 11 10 11 24 29  6  9
13 11 10 11 24 29  6  9
14 11 10 11 24 29  6  9
15 11 10 11 24 29  6  9
16 11 10 11 24 29  6  9
> 
> data.xgb.clu.clu.a<-sort(data.xgb.clu.clu[1:5])
> data.xgb.clu.clu.b<-sort(data.xgb.clu.clu[6:7])
> 
> data.rdf.clu.clu.a<-sort(as.numeric(data.rdf.clu.clu[1:5]))
> data.rdf.clu.clu.b<-sort(as.numeric(data.rdf.clu.clu[6:7]))
> 
> data.xgb.row.clu.a<-sort(data.xgb.row.clu[1:5])
> data.xgb.row.clu.b<-sort(data.xgb.row.clu[6:7])
> 
> data.xgb.clu.row.a<-sort(data.xgb.clu.row[1:5])
> data.xgb.clu.row.b<-sort(data.xgb.clu.row[6:7])
> 
> data.xgb.row.row.a<-sort(data.xgb.row.row[1:5])
> data.xgb.row.row.b<-sort(data.xgb.row.row[6:7])
> 
> r.a1<-c(data.xgb.clu.clu.a[1],data.rdf.clu.clu.a[1],data.xgb.row.clu.a[1],data.xgb.clu.row.a[1],
+         data.xgb.row.row.a[1],data.xgb.clu.cum$a1,data.xgb.row.cum$a1)
> r.a2<-c(data.xgb.clu.clu.a[2],data.rdf.clu.clu.a[2],data.xgb.row.clu.a[2],data.xgb.clu.row.a[2],
+         data.xgb.row.row.a[2],data.xgb.clu.cum$a2,data.xgb.row.cum$a2)
> r.a3<-c(data.xgb.clu.clu.a[3],data.rdf.clu.clu.a[3],data.xgb.row.clu.a[3],data.xgb.clu.row.a[3],
+         data.xgb.row.row.a[3],data.xgb.clu.cum$a3,data.xgb.row.cum$a3)
> r.a4<-c(data.xgb.clu.clu.a[4],data.rdf.clu.clu.a[4],data.xgb.row.clu.a[4],data.xgb.clu.row.a[4],
+         data.xgb.row.row.a[4],data.xgb.clu.cum$a4,data.xgb.row.cum$a4)
> r.a5<-c(data.xgb.clu.clu.a[5],data.rdf.clu.clu.a[5],data.xgb.row.clu.a[5],data.xgb.clu.row.a[5],
+         data.xgb.row.row.a[5],data.xgb.clu.cum$a5,data.xgb.row.cum$a5)
> r.b1<-c(data.xgb.clu.clu.b[1],data.rdf.clu.clu.b[1],data.xgb.row.clu.b[1],data.xgb.clu.row.b[1],
+         data.xgb.row.row.b[1],data.xgb.clu.cum$b1,data.xgb.row.cum$b1)
> r.b2<-c(data.xgb.clu.clu.b[2],data.rdf.clu.clu.b[2],data.xgb.row.clu.b[2],data.xgb.clu.row.b[2],
+         data.xgb.row.row.b[2],data.xgb.clu.cum$b2,data.xgb.row.cum$b2)
> 
> sort(table(r.a1))
r.a1
 3  6  8  4 11 
 1  1  2 16 17 
> sort(table(r.a2))
r.a2
 8 11 12 10 
 1  5 14 17 
> sort(table(r.a3))
r.a3
10 12 13 15 16 11 
 1  1  1  1  1 32 
> sort(table(r.a4))
r.a4
10 16 21 22 27 23 24 
 1  1  1  1  1 16 16 
> sort(table(r.a5))
r.a5
15 19 30 29 28 
 1  1  2 16 17 
> sort(table(r.b1))
r.b1
 7  9  3  6 
 1  1  2 33 
> sort(table(r.b2))
r.b2
 4  5 10  9 
 1  1 17 18 
> ########################################################################################################
> #train.sa<-head(dlt$sa,dim(dlt)[1]-1)
> #train.sb<-head(dlt$sb,dim(dlt)[1]-1)
> #result.sa<-tail(dlt$sa,dim(dlt)[1]-1)
> #result.sb<-tail(dlt$sb,dim(dlt)[1]-1)
> 
> #train
> sa.1<-dlt$sa[1:(dim(dlt)[1]-3)]
> sa.2<-dlt$sa[2:(dim(dlt)[1]-2)]
> sa.3<-dlt$sa[3:(dim(dlt)[1]-1)]
> result.sa<-dlt$sa[4:dim(dlt)[1]]
> trains.sa<-data.frame(sa.1,sa.2,sa.3,result.sa)
> trains.T.sa<-Matrix(as.matrix(trains.sa[,1:3]),sparse=T)
> bst.sa<-xgboost(data = trains.T.sa,label = trains.sa$result.sa,nrounds = 300,print_every_n = 300L)
[1]	train-rmse:65.494759 
[300]	train-rmse:0.167520 
> 
> 
> sb.1<-dlt$sb[1:(dim(dlt)[1]-3)]
> sb.2<-dlt$sb[2:(dim(dlt)[1]-2)]
> sb.3<-dlt$sb[3:(dim(dlt)[1]-1)]
> result.sb<-dlt$sb[4:dim(dlt)[1]]
> trains.sb<-data.frame(sb.1,sb.2,sb.3,result.sb)
> trains.T.sb<-Matrix(as.matrix(trains.sb[,1:3]),sparse=T)
> bst.sb<-xgboost(data = trains.T.sb,label = trains.sb$result.sb,nrounds = 300,print_every_n = 300L)
[1]	train-rmse:10.019279 
[300]	train-rmse:1.018455 
> 
> #predoct
> sa.1<-dlt$sa[2:(dim(dlt)[1]-2)]
> sa.2<-dlt$sa[3:(dim(dlt)[1]-1)]
> sa.3<-dlt$sa[4:dim(dlt)[1]]
> tests.sa<-data.frame(sa.1,sa.2,sa.3)
> tests.T.sa<-Matrix(as.matrix(tests.sa),sparse=T)
> testPredictions.sa <- predict(object = bst.sa,newdata = tests.T.sa)
> 
> sb.1<-dlt$sb[2:(dim(dlt)[1]-2)]
> sb.2<-dlt$sb[3:(dim(dlt)[1]-1)]
> sb.3<-dlt$sb[4:dim(dlt)[1]]
> tests.sb<-data.frame(sb.1,sb.2,sb.3)
> tests.T.sb<-Matrix(as.matrix(tests.sb),sparse=T)
> testPredictions.sb <- predict(object = bst.sb,newdata = tests.T.sb)
> 
> sa.pre<-round(testPredictions.sa)
> sb.pre<-round(testPredictions.sb)
> 
> c(tail(sa.pre,1),tail(sb.pre,1))
[1] 81  8
> 
